@{
    ViewBag.Title = "Cierre";
}

<div class="page-title-head d-flex align-items-center mb-4">
    <div class="flex-grow-1">
        <h4 class="fs-sm text-uppercase fw-bold m-0">Cierre Diario</h4>
    </div>
    <div class="text-end">
        <ol class="breadcrumb m-0 py-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">VERCOM</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Caja")">CAJA</a></li>
            <li class="breadcrumb-item active">CIERRE</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <!-- Simple card -->
        <div class="card">
            <div class="card-body">
                <form>
                    <div class="row gy-2 gx-2 align-items-center">
                        Filtar por caja:
                        <div class="col-auto">
                            <div class="input-group mb-2">
                                <div class="input-group-text"><i data-lucide="store" class="app-search-icon text-muted"></i></div>
                                <select class="form-select form-control" id="CajaID" name="CajaID">
                                    @Html.Action("_ListCajas", "Parcial")
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <!-- end card-body-->
        </div>
        <!-- end card-->
    </div>
    <!-- end col -->
</div>
<div class="row row-cols-xxl-5 row-cols-md-3 row-cols-1 align-items-center g-1">
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Total Products">Saldo inicial</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-primary rounded-circle fs-22">
                            <i class="ti ti-wallet"></i>
                        </span>
                    </div>
                    <h3 class="mb-0 text-info" id="resumenSaldoInicial">0</h3>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Customer Orders">Cantidad de movimientos</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-secondary rounded-circle fs-22">
                            <i class="ti ti-transform"></i>
                        </span>
                    </div>
                    <h3 class="card-subtitle" id="resumenCantidad">0</h3>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Customer Orders">Entradas</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-success rounded-circle fs-22">
                            <i class="ti ti-stack-push"></i>
                        </span>
                    </div>
                    <h3 class="card-subtitle text-success" id="resumenEntradas">$0.00</h3>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Sales Today">Salidas</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-danger rounded-circle fs-22">
                            <i class="ti ti-stack-pop"></i>
                        </span>
                    </div>
                    <h3 class="card-subtitle text-danger" id="resumenSalidas">$0.00</h3>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Total Revenue">Saldo final</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-warning rounded-circle fs-22">
                            <i class="ti ti-wallet-off"></i>
                        </span>
                    </div>
                    <h3 class="card-subtitle text-primary" id="resumenSaldo">$0.00</h3>
                </div>
            </div>
        </div>
    </div>
</div><!-- end row -->
<div class="row" id="bloque-tsubmayores">
    <div class="col-12">
        <div data-table="" data-table-rows-per-page="100" class="card">
            <div class="card-header border-light justify-content-between">
                <div class="d-flex gap-2">
                    <div class="app-search">
                        <input data-table-search="" type="search" class="form-control" placeholder="Buscar por nombre...">
                        <i data-lucide="search" class="app-search-icon text-muted"></i>
                    </div>
                    <button data-table-delete-selected="" data-table-delete-url="@Url.Action("EliminarMultiples","Caja")" type="button" class="btn btn-danger btn-icon d-none">
                        <i class="ti ti-trash fs-xl"></i>
                    </button>
                </div>
                <div class="d-flex align-items-center gap-2">
                    <!-- Records Per Page -->
                    <div>
                        <select data-table-set-rows-per-page="" class="form-select form-control my-1 my-md-0">
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="150">150</option>
                            <option value="200">200</option>
                        </select>
                    </div>
                </div>
                <div class="d-flex gap-1">
                    <a href="@Url.Action("Create","Caja")" class="btn btn-secondary btn-icon">
                        <i class="ti ti-plus fs-xxl"></i>
                    </a>
                    <button class="btn btn-primary btn-icon" id="btnExportExcel">
                        <i data-lucide="file-spreadsheet" class="fs-lg"></i>
                    </button>
                    <button class="btn btn-info btn-icon" id="btnPrint">
                        <i data-lucide="printer" class="fs-lg"></i>
                    </button>
                </div>
            </div>
            <div class="table-responsive">
                <table id="tablaMovimientosCaja" class="table table-custom table-centered table-select table-hover w-100 mb-0">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th data-table-sort="" data-column="SUBMAYOR">SUB-MAYOR</th>
                            <th data-table-sort="" data-column="TIPO">ENTRADAS</th>
                            <th data-table-sort="" data-column="MONTO">SALIDAS</th>
                            <th data-table-sort="" data-column="CONCEPTO">SALDO ACTUAL</th>
                            <th class="text-center noExport" style="width: 1%;" data-exclude="true">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div>
    </div><!-- end col -->
</div><!-- end row -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="col-lg-12">
                    <label for="ObservacionesCierre" class="form-label">Observaciones</label>
                    <textarea id="ObservacionesCierre" class="form-control" rows="3" maxlength="255"
                              placeholder="Escribe aquí alguna nota o comentario..."></textarea>
                </div>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-end align-items-center">
                    <button id="btnConfirmarCierre" class="btn btn-warning btn-lg" onclick="confirmarCierre()">
                        <i data-lucide="check-circle" class="me-2"></i> Confirmar Cierre
                    </button>
                </div>
            </div>
        </div>
    </div><!-- end col -->
</div><!-- end row -->
@section Styles {
    <link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/Scripts/plugins/toastr/toastr.min.js"></script>
    <script src="~/Scripts/plugins/moment/moment.min.js"></script>
    <script src="~/Scripts/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Scripts/plugins/choices/choices.min.js"></script>
    <script src="~/Scripts/plugins/table2excel/table2excel.js"></script>
    <script src="~/Scripts/custom-table.js"></script>
    <script>
        $(document).ready(function () {
            // Carga resumen al iniciar y cada vez que cambie la caja
            window.customTable = new CustomTable();
            cargarResumenCierre();
            cargarResumenSubMayores();
            $('#CajaID').change(cargarResumenCierre, cargarResumenSubMayores);
        });

        function cargarResumenCierre() {
            const cajaId = $('#CajaID').val();
            $.ajax({
                url: '/Caja/ObtenerResumenCierre',
                type: 'GET',
                data: { cajaId: cajaId },
                success: function (res) {
                    if (res.length === 0) return;
                    $('#resumenSaldoInicial').text(res.SaldoInicial);
                    $('#resumenCantidad').text(res.CantidadMovimientos);
                    $('#resumenEntradas').text(`$${res.TotalEntradas.toFixed(2)}`);
                    $('#resumenSalidas').text(`$${res.TotalSalidas.toFixed(2)}`);
                    $('#resumenSaldo').text(`$${res.SaldoTotal.toFixed(2)}`);
                },
                error: function () {
                    toastr.error('Error al obtener el resumen de cierre.');
                }
            });
        }
        function cargarResumenSubMayores() {
            const cajaId = $('#CajaID').val();
            var url = '@Url.Action("ListaResumenSubMayores", "Caja")';
            const bloqueID = '#bloque-tsubmayores';
            activarOverlayEnContenedor(bloqueID);
            $.getJSON(url, { cajaId }).done(data => {
                if (data.length > 0) {
                    refreshTable(data);
                    return;
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Sin resultados',
                        text: 'No se encontraron movimientos.'
                    });
                }
            }).fail(() => {
                Swal.fire({
                  icon: 'error',
                  title: 'Error de conexión',
                  text: 'No se pudo consultar los datos. Verifica tu conexión o intenta nuevamente.'
                });
            }).always(() => desactivarOverlayEnContenedor(bloqueID));
        }
        function refreshTable(data) {
            // 1. Localiza <table> y su instancia
            const tableEl = document.querySelector('[data-table]');
            const instance = window.customTable.tables.find(t => t.table === tableEl);
            const tbody = tableEl.querySelector("tbody");
            tbody.innerHTML = "";
            let ingresos = 0, egresos = 0;
            const rows = data.map(m => {
                const tr = document.createElement('tr');
                const tipColor = "";
                tr.id = `${m.SubMayorID}`;
                tr.dataset.id = m.SubMayorID;
                tr.innerHTML = `
                <td>${m.SubMayorNombre}</td>
                <td class="tipo">${m.TotalEntrada.toFixed(2)}</td>
                <td class="monto">$${m.TotalSalida.toFixed(2)}</td>
                <td>${m.SaldoActual.toFixed(2)}</td>
                <td class="noExport">
                <div class="d-flex justify-content-center gap-1">
                <button class="btn btn-light btn-icon btn-sm rounded-circle btn_edit btnEditar"><i class="ti ti-edit fs-lg"></i></button>
                </div>
                </td>`;
                return tr;
            });  
            instance.fullRefresh(rows);
            setupCheckboxListeners();
        }
        function setupCheckboxListeners() {
            let tableEl = document.querySelector('[data-table]');
            let btnDeleteSelected = document.querySelector('[data-table-delete-selected]');
            let e = tableEl.querySelector("tbody");
            let checkAllCheckBox = document.querySelector("#select-all-products");
            let t = e.querySelectorAll('input[type="checkbox"]');
            let rows = Array.from(e.querySelectorAll("tr"));
            let filteredRows = [...rows];

            checkAllCheckBox &&
                0 < t.length &&
                t.forEach((e) => {
                    e.addEventListener("change", () => {
                        var e = Array.from(t).some((e) => e.checked);
                        btnDeleteSelected &&
                            0 < filteredRows.length &&
                            btnDeleteSelected.classList.toggle("d-none", !e);
                    });
                });
        }
        function activarOverlayEnContenedor(contenedorID) {
            const contenedor = document.querySelector(contenedorID);
            if (!contenedor) return;

            const cards = contenedor.querySelectorAll('.card');
            cards.forEach(card => {
                let overlay = card.querySelector('.card-overlay');
                if (!overlay) {
                    overlay = document.createElement('div');
                    overlay.classList.add(
                        'card-overlay',
                        'position-absolute',
                        'top-0',
                        'start-0',
                        'w-100',
                        'h-100',
                        'd-flex',
                        'justify-content-center',
                        'align-items-center',
                        'noExport'
                    );

                    overlay.style.zIndex = '10';
                    const spinner = document.createElement('div');
                    spinner.classList.add('spinner-border', 'text-primary');
                    spinner.setAttribute('role', 'status');
                    const label = document.createElement('span');
                    label.classList.add('visually-hidden');
                    label.textContent = 'Cargando...';
                    spinner.appendChild(label);
                    overlay.appendChild(spinner);
                    card.appendChild(overlay);
                }

                overlay.style.display = 'flex';
                $(overlay).hide().fadeIn(200);
            });
        }
        function desactivarOverlayEnContenedor(contenedorID) {
            const contenedor = document.querySelector(contenedorID);
            if (!contenedor) return;
            const overlays = contenedor.querySelectorAll('.card .card-overlay');
            overlays.forEach(overlay => {
                $(overlay).fadeOut(200, () => overlay.remove());
            });
        }
        function confirmarCierre() {
            const cajaId = $('#CajaID').val();
            const observaciones = $('#ObservacionesCierre').val();
            Swal.fire({
                title: '¿Confirmar cierre de caja?',
                text: 'Esta acción registrará el cierre diario y bloqueará nuevos movimientos.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, confirmar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (!result.isConfirmed) return;

                $.ajax({
                    url: '/Caja/CierreDiario',
                    type: 'POST',
                    data: {
                        cajaId: cajaId,
                        usuario: '@User.Identity.Name',
                        observaciones: observaciones
                    },
                    success: function (res) {
                        if (res.exito) {
                            $('#totalIngresos').text(`$${res.resumen.TotalIngresos.toFixed(2)}`);
                            $('#totalEgresos').text(`$${res.resumen.TotalEgresos.toFixed(2)}`);
                            $('#saldoSubMayores').text(`$${res.resumen.SaldoSubMayores.toFixed(2)}`);
                            $('#saldoCajaPrincipal').text(`$${res.resumen.SaldoCajaPrincipal.toFixed(2)}`);
                            toastr.success(res.mensaje);
                            $('#btnConfirmarCierre').prop('disabled', true);
                        } else {
                            Swal.fire({ icon: 'error', title: 'Error', text: res.mensaje });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'No se pudo confirmar el cierre. Intente nuevamente.'
                        });
                    }
                });
            });
        }
    </script>
}