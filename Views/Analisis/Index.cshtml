@{
    ViewBag.Title = "ANALISIS - OPERACIONES";
    var date = DateTime.Now;
    var oPrimerDiaDelMes = new DateTime(date.Year, date.Month, 1);
    var oUltimoDiaDelMes = oPrimerDiaDelMes.AddMonths(1).AddDays(-1);
}
<div class="page-title-head d-flex align-items-center">
    <div class="flex-grow-1">
        <h4 class="fs-sm text-uppercase fw-bold m-0">ANALISIS - OPERACIONES</h4>
    </div>
    <div class="text-end">
        <ol class="breadcrumb m-0 py-0">
            <li class="breadcrumb-item">
                <a href="javascript: void(0);">VERCOM</a>
            </li>
            <li class="breadcrumb-item">
                <a href="javascript: void(0);">ANALISIS</a>
            </li>
            <li class="breadcrumb-item active">ANALISIS - OPERACIONES</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card loader">
            <div class="card-body">
                <div class="row gy-2 gx-2 justify-content-between">
                    <div class="col-3">
                        <div class="input-group mb-2">
                            <div class="input-daterange input-group" id="datePickerRange">
                                <div class="input-group-text">
                                    <i data-lucide="calendar"
                                       class="app-search-icon text-muted"></i>
                                </div>
                                <input type="text" class="form-control date" id="start" name="start" placeholder="Desde"
                                       value="@oPrimerDiaDelMes.ToString("d")" data-toggle="date-picker"
                                       data-single-date-picker="true">
                                <div class="input-group-text"> AL </div>
                                <input type="text" class="form-control date" id="end" name="end" placeholder="Hasta"
                                       data-toggle="date-picker" data-single-date-picker="true"
                                       value="@oUltimoDiaDelMes.ToString("d")">
                            </div>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="input-group mb-2">
                            <div class="input-group-text"><i data-lucide="package"></i></div>
                            <select class="form-control" name="tipo_operacionid" id="tipo_operacionid">
                                <option value="0" selected>Tipo de operación</option>
                                @Html.Action("_listoperaciontipo", "Parcial")
                            </select>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="input-group mb-2" id="tipPago" style="display: none">
                            <div class="input-group-text">
                                <i data-lucide="package"
                                   class="app-search-icon text-muted"></i>
                            </div>
                            <select class="form-control" name="tipo_pagoid" id="tipo_pagoid">
                                <option value="0" selected>Tipo de pago</option>
                                @Html.Action("_listtipopago", "Parcial")
                            </select>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <i data-lucide="store" class="app-search-icon text-muted"></i>
                            </div>
                            <select class="form-control" name="punto_ventaid" id="punto_ventaid" required="">
                                <option value="0" selected>Punto de venta</option>
                                @Html.Action("_listapuntos", "Parcial")
                            </select>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <i data-lucide="tag" class="app-search-icon text-muted"></i>
                            </div>
                            <select class="form-control" name="areaid" id="areaid" required="">
                                <option value="0" selected>Área económica</option>
                                @Html.Action("_listareas", "Parcial")
                            </select>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="input-group mb-2">
                            <div class="input-group-text">
                                <i data-lucide="tag" class="app-search-icon text-muted"></i>
                            </div>
                            <select class="form-control" name="categoriaid" id="categoriaid" required="">
                                <option value="0" selected>Categoría</option>
                                @Html.Action("_listcategorias", "Parcial")
                            </select>
                        </div>
                    </div>
                    <div class="col-5">
                        <div class="mb-2">
                            <select class="form-control" name="productoid" id="productoid" required="">
                                <option value="0" selected>Producto</option>
                                @Html.Action("_listtproductos", "Parcial")
                            </select>
                        </div>
                    </div>
                    <div class="col-auto">
                        <button type="button" class="btn btn-primary mb-2" id="BTNfilter">
                            <i data-lucide="filter" class="fs-lg"></i>
                        </button>
                    </div>
                </div>
            </div> <!-- end card-body-->          
        </div>
        <!-- end card-->
    </div>
    <!-- end col -->
</div>
<div class="row row-cols-xxl-4 row-cols-md-3 align-items-center g-1">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 title="Total Products">Importe</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-primary rounded-circle fs-22">
                            <i class="ti ti-cash-banknote"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="label_totalImporte">0,00</h3>
                    <span class="badge badge-soft-secondary fw-medium ms-2 fs-xs ms-auto"
                          id="label_porcienImporte"></span>
                </div>
                <p class="mb-0">
                    <span class="text-primary"><i class="ti ti-point-filled"></i></span>
                    <span class="text-nowrap text-muted">Importe total</span>
                </p>
            </div>
            <div class="card-overlay" style="display: none;">              
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 title="Customer Orders">Costo</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-secondary rounded-circle fs-22">
                            <i class="ti ti-math-cos"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="label_totalCosto">0,00</h3>
                    <span class="badge badge-soft-secondary fw-medium ms-2 fs-xs ms-auto"
                          id="label_porcienCosto"></span>
                </div>
                <p class="mb-0">
                    <span class="text-secondary"><i class="ti ti-point-filled"></i></span>
                    <span class="text-nowrap text-muted">Costo total</span>
                </p>
            </div>
            <div class="card-overlay" style="display: none;">             
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 title="Sales Today">Utilidad</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-success rounded-circle fs-22">
                            <i class="ti ti-premium-rights"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="label_utilidades">0,00</h3>
                    <span class="badge badge-soft-success fw-medium ms-2 fs-xs ms-auto"
                          id="label_porcienutilidades"></span>
                </div>
                <p class="mb-0">
                    <span class="text-success"><i class="ti ti-point-filled"></i></span>
                    <span class="text-nowrap text-muted">Utilidad (b) total</span>
                </p>
            </div>
            <div class="card-overlay" style="display: none;">           
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 title="Customer Count">Tipo de pago</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-info rounded-circle fs-22">
                            <i class="ti ti-cash"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="label_cantEfectivo">0,00</h3>
                    <span class="badge badge-soft-info fw-medium ms-2 fs-xs ms-auto" id="label_porcientEfectivo"></span>
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-info rounded-circle fs-22">
                            <i class="ti ti-credit-card-pay"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="label_cantTransfer">0,00</h3>
                    <span class="badge badge-soft-warning fw-medium ms-2 fs-xs ms-auto"
                          id="label_porcientTransfer"></span>
                </div>
                <p class="mb-0">
                    <span class="text-info"><i class="ti ti-point-filled"></i></span>
                    <span class="text-nowrap text-muted">Efectivo | Transferencia</span>
                </p>
            </div>
            <div class="card-overlay" style="display: none;">         
            </div>
        </div>
    </div>
</div>
<!-- end row -->
<div class="row">
    <div class="col-12">
        <div class="card" id="reporte-completo">
            <div class="card-header border-light">
                @*<div class="d-flex gap-1">
                    <button class="btn btn-primary btn-icon" id="btnPrintReport">
                        <i data-lucide="printer" class="fs-lg"></i>
                    </button>
                    <button class="btn btn-success" id="btnExportPDFReport" onclick="exportarReporteAgrupado()">
                        <i class="ti ti-download me-1"></i> Exportar reporte
                    </button>
                </div>*@
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-xl-6">
                        <div data-table="" data-table-rows-per-page="5" class="card">
                            <div class="card-header border-light justify-content-between">
                                <div class="d-flex gap-2">
                                    <div class="app-search">
                                        <input data-table-search="" type="search" class="form-control"
                                               placeholder="Buscar por nombre...">
                                        <i data-lucide="search" class="app-search-icon text-muted"></i>
                                    </div>
                                </div>
                                <div class="d-flex gap-1">                                
                                    <button class="btn btn-success btn-icon" id="btnExportExcel1">
                                        <i data-lucide="file-spreadsheet" class="fs-lg"></i>
                                    </button>
                                    <button class="btn btn-primary btn-icon" id="btnPrint1">
                                        <i data-lucide="printer" class="fs-lg"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="TableDataForTipo">
                                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                                        <tr>
                                            <th data-table-sort data-column="toper">T.OPERACION</th>
                                            <th data-table-sort data-column="cant">CANT</th>
                                            <th data-table-sort data-column="porc">%</th>
                                            <th data-table-sort data-column="imp">IMP</th>
                                            <th data-table-sort data-column="cos">COS</th>
                                            <th data-table-sort data-column="uti">UTI</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer border-0">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div data-table-pagination-info="entradas"></div>
                                    <div data-table-pagination=""></div>
                                </div>
                            </div>
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                    <div class="col-xl-6">
                        <div class="card">
                            <div class="card-body">
                                <div dir="ltr">
                                    <div id="canvaForVXoperacion" class="apex-charts"></div>
                                </div>
                            </div>
                            <!-- end card body-->
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                </div>
                <div class="row">
                    <div class="col-xl-6">
                        <div data-table="" data-table-rows-per-page="31" class="card">
                            <div class="card-header border-light justify-content-between">
                                <div class="d-flex gap-2">
                                    <div class="app-search">
                                        <input data-table-search="" type="search" class="form-control"
                                               placeholder="Buscar por nombre...">
                                        <i data-lucide="search" class="app-search-icon text-muted"></i>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center gap-2">
                                    <!-- Records Per Page -->
                                    <div class="input-group">
                                        <div class="input-group-text"><i data-lucide="eye" class="app-search-icon text-muted"></i></div>
                                        <select data-table-set-rows-per-page="" class="form-select form-control my-1 my-md-0">
                                            <option value="7">7</option>
                                            <option value="15">15</option>
                                            <option value="31">31+</option>
                                        </select>
                                    </div>

                                </div>
                                <div class="d-flex gap-1">                                    
                                    <button class="btn btn-success btn-icon" id="btnExportExcel2">
                                        <i data-lucide="file-spreadsheet" class="fs-lg"></i>
                                    </button>
                                    <button class="btn btn-primary btn-icon" id="btnPrint2">
                                        <i data-lucide="printer" class="fs-lg"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="TableDataForFecha">
                                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                                        <tr>
                                            <th data-table-sort data-column="fecha">FECHA</th>
                                            <th data-table-sort data-column="toper">T.OPERACION</th>
                                            <th data-table-sort data-column="cant">CANT</th>
                                            <th data-table-sort data-column="porc">%</th>
                                            <th data-table-sort data-column="imp">IMP</th>
                                            <th data-table-sort data-column="cos">COS</th>
                                            <th data-table-sort data-column="uti">UTI</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer border-0">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div data-table-pagination-info="entradas"></div>
                                    <div data-table-pagination=""></div>
                                </div>
                            </div>
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                    <div class="col-xl-6">
                        <div class="card">
                            <div class="card-body">
                                <div dir="ltr">
                                    <div id="canvaForVXfecha" class="apex-charts"></div>
                                </div>
                            </div>
                            <!-- end card body-->
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                </div>
                <div class="row">
                    <div class="col-xl-6">
                        <div data-table="" data-table-rows-per-page="10" class="card">
                            <div class="card-header border-light justify-content-between">
                                <div class="d-flex gap-2">
                                    <div class="app-search">
                                        <input data-table-search="" type="search" class="form-control"
                                               placeholder="Buscar por nombre...">
                                        <i data-lucide="search" class="app-search-icon text-muted"></i>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center gap-2">
                                    <!-- Records Per Page -->
                                    <div class="input-group">
                                        <div class="input-group-text"><i data-lucide="eye" class="app-search-icon text-muted"></i></div>
                                        <select data-table-set-rows-per-page="" class="form-select form-control my-1 my-md-0">
                                            <option value="10">10</option>
                                            <option value="20">20</option>
                                            <option value="30">30</option>
                                            <option value="30-50+">50+</option>
                                        </select>
                                    </div>

                                </div>
                                <div class="d-flex gap-1">                                    
                                    <button class="btn btn-success btn-icon" id="btnExportExcel3">
                                        <i data-lucide="file-spreadsheet" class="fs-lg"></i>
                                    </button>
                                    <button class="btn btn-primary btn-icon" id="btnPrint3">
                                        <i data-lucide="printer" class="fs-lg"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="TableDataForPunto">
                                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                                        <tr>
                                            <th data-table-sort data-column="punto">PUNTO</th>
                                            <th data-table-sort data-column="toper">T.OPERACION</th>
                                            <th data-table-sort data-column="cant">CANT</th>
                                            <th data-table-sort data-column="porc">%</th>
                                            <th data-table-sort data-column="imp">IMP</th>
                                            <th data-table-sort data-column="cos">COS</th>
                                            <th data-table-sort data-column="uti">UTI</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer border-0">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div data-table-pagination-info="entradas"></div>
                                    <div data-table-pagination=""></div>
                                </div>
                            </div>
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                    <div class="col-xl-6">
                        <div class="card">
                            <div class="card-body">
                                <div dir="ltr">
                                    <div id="canvaForVXpunto" class="apex-charts"></div>
                                </div>
                            </div>
                            <!-- end card body-->
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                </div>
                <div class="row">
                    <div class="col-xl-12">
                        <div data-table="" data-table-rows-per-page="100" class="card">
                            <div class="card-header border-light justify-content-between">
                                <div class="d-flex gap-2">
                                    <div class="app-search">
                                        <input data-table-search="" type="search" class="form-control"
                                               placeholder="Buscar por nombre...">
                                        <i data-lucide="search" class="app-search-icon text-muted"></i>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center gap-2">
                                    <!-- Records Per Page -->
                                    <div class="input-group">
                                        <div class="input-group-text"><i data-lucide="eye" class="app-search-icon text-muted"></i></div>
                                        <select data-table-set-rows-per-page="" class="form-select form-control my-1 my-md-0">
                                            <option value="100">100</option>
                                            <option value="150">150</option>
                                            <option value="200">200</option>
                                            <option value="250-500+">250+</option>
                                        </select>
                                    </div>

                                </div>
                                <div class="d-flex gap-1">                                 
                                    <button class="btn btn-success btn-icon" id="btnExportExcel4">
                                        <i data-lucide="file-spreadsheet" class="fs-lg"></i>
                                    </button>
                                    <button class="btn btn-primary btn-icon" id="btnPrint4">
                                        <i data-lucide="printer" class="fs-lg"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="TableDataForProducto">
                                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                                        <tr>
                                            <th data-table-sort data-column="cod">COD</th>
                                            <th data-table-sort data-column="producto">PRODUCTO</th>
                                            <th data-table-sort data-column="toper">T.OPERACION</th>
                                            <th data-table-sort data-column="cant">CANT</th>
                                            <th data-table-sort data-column="um">UM</th>
                                            <th data-table-sort data-column="porc">%</th>
                                            <th data-table-sort data-column="imp">IMP</th>
                                            <th data-table-sort data-column="cos">COS</th>
                                            <th data-table-sort data-column="uti">UTI</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer border-0">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div data-table-pagination-info="entradas"></div>
                                    <div data-table-pagination=""></div>
                                </div>
                            </div>
                        </div>
                        <!-- end card body-->
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                </div>
                <div class="row">
                    <div class="col-xl-12">
                        <div class="card">
                            <div class="card-body">
                                <div dir="ltr">
                                    <div id="canvaForVXproducto" class="apex-charts"></div>
                                </div>
                            </div>
                            <!-- end card body-->
                        </div>
                        <!-- end card -->
                    </div>
                    <!-- end col-->
                </div>
            </div>
            <div class="card-overlay" style="display: none;">              
            </div>
        </div>
    </div><!-- end col -->
</div>
<!-- end row -->
@section Styles {
    <link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <link href="~/Content/plugins/chartist/chartist.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/Scripts/plugins/toastr/toastr.min.js"></script>
    <script src="~/Scripts/plugins/moment/moment.min.js"></script>
    <script src="~/Scripts/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Scripts/plugins/choices/choices.min.js"></script>
    <script src="~/Scripts/custom-table.js"></script>
    <script src="~/Scripts/plugins/table2excel/table2excel.js"></script>
    <script src="~/Scripts/plugins/SheetJs/xlsx.full.min.js"></script>
    <script src="~/Scripts/plugins/chartJs/Chart.min.js"></script>
    <script src="~/Scripts/plugins/apexcharts/apexcharts.min.js"></script>
    <script src="~/Scripts/charts/custom-charts.js"></script>
    <script src="~/Scripts/plugins/jsPdf/jspdf.umd.min.js"></script>
    <script src="~/Scripts/plugins/htmlTocanvas/html2canvas.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            const formato = 'DD/MM/YYYY';
            $('#datePickerRange').daterangepicker({
                startDate: moment().startOf('month'),
                endDate: moment().endOf('month'),
                singleDatePicker: false,
                showDropdowns: true,
                autoUpdateInput: true,
                cancelClass: "btn-light",
                applyButtonClasses: "btn-success",
                opens: 'center',
                locale: {
                    format: formato,
                    separator: ' - ',
                    applyLabel: 'Aplicar',
                    cancelLabel: 'Cancelar',
                    fromLabel: 'Desde',
                    toLabel: 'Hasta',
                    customRangeLabel: 'Personalizado',
                    daysOfWeek: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                    monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                        'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                    firstDay: 1
                }
            }, function (start, end) {
                $('#start').val(start.format(formato));
                $('#end').val(end.format(formato));
            });

            const choicesProductoid = new Choices('#productoid', {
                searchEnabled: true,
                itemSelectText: '',
                shouldSort: false
            });

            $('#tipo_operacionid').on('change', function () {
                var tipo = document.getElementById("tipo_operacionid").value;
                if (tipo == 2) {
                    $('#tipPago').show();
                } else {
                    document.getElementById("tipo_pagoid").value = null;
                    $('#tipPago').hide();
                }
            });

            $('#punto_ventaid').on('change', function () {
                const url = '@Url.Action("_productosXpuntoFTdate", "Analisis")';
                const fechainicio = $('#star').val();
                const fechafin = $('#end').val();
                const pventaid = $('#punto_ventaid').val();
                const categ_prod = $('#cat').val();

                $.getJSON(url, {
                    inicio: fechainicio,
                    fin: fechafin,
                    pventa: pventaid,
                    tipo: categ_prod
                }, function (data) {
                    const formattedOptions = data.map(item => ({
                        value: item.id,
                        label: `${item.nombre} - (${item.cod})`
                    }));
                    choicesProductoid.clearChoices();
                    choicesProductoid.setChoices(formattedOptions, 'value', 'label', true);
                });
            });

            $('#cat').on('change', function () {
                const url = '@Url.Action("_productosXpuntoFTdate", "Analisis")';
                const fechainicio = $('#star').val();
                const fechafin = $('#end').val();
                const pventaid = $('#punto_ventaid').val();
                const categ_prod = $('#cat').val();

                $.getJSON(url, {
                    inicio: fechainicio,
                    fin: fechafin,
                    pventa: pventaid,
                    tipo: categ_prod
                }, function (data) {
                    const opciones = data.map(item => ({
                        value: item.id,
                        label: `${item.nombre} - (${item.cod})`
                    }));

                    choicesProductoid.clearChoices();
                    choicesProductoid.setChoices(opciones, 'value', 'label', true);
                });
            });

            $('#BTNfilter').on('click', async () => {              
                try {
                    mostrarCardLoader();
                    const parametros = {
                        inicio: $('#start').val(),
                        fin: $('#end').val(),
                        toper: $("#tipo_operacionid").val(),
                        pventa: $("#punto_ventaid").val(),
                        categ: $("#categoriaid").val(),
                        producto: $("#productoid").val(),
                        tpago: $("#tipo_pagoid").val(),
                        area: $("#areaid").val()
                    };
                    // URLs de los servicios
                    const url1 = '@Url.Action("iGeneralData", "Analisis")';
                    const url2 = '@Url.Action("ChartDxTOperacion", "Analisis")';
                    const url3 = '@Url.Action("ChartDxFecha", "Analisis")';
                    const url4 = '@Url.Action("ChartDxPunto", "Analisis")';
                    const url5 = '@Url.Action("ChartDxProducto", "Analisis")';
                    async function obtenerDatos(url, parametros) {
                        const queryParams = new URLSearchParams(parametros).toString();
                        const fullUrl = `${url}?${queryParams}`;

                        try {
                            const response = await fetch(fullUrl, { method: "GET" });

                            const tipo = response.headers.get("content-type") || "";
                            if (!response.ok) {
                                console.warn(`⚠️ Error HTTP ${response.status} en ${url}`);
                                const texto = await response.text();
                                console.log("Contenido devuelto:", texto.slice(0, 200));
                                return null;
                            }

                            if (!tipo.includes("application/json")) {
                                const texto = await response.text();
                                console.error("❌ Respuesta no es JSON válida:", texto.slice(0, 200));
                                return null;
                            }

                            return await response.json();
                        } catch (error) {
                            console.error(`❌ Error de red o fetch en ${url}:`, error);
                            return null;
                        }
                    }
                    // Obtener datos en paralelo
                    const [data1, data2, data3, data4, data5] = await Promise.all([
                        obtenerDatos(url1, parametros),
                        obtenerDatos(url2, parametros),
                        obtenerDatos(url3, parametros),
                        obtenerDatos(url4, parametros),
                        obtenerDatos(url5, parametros),
                    ]);
                    // Actualizar contenido
                    actualizarEtiquetas(data1);
                    actualizarTablasYGraficos(data2, data3, data4, data5);
                } catch (error) {
                    console.error("Error al obtener los datos:", error);
                } finally {
                    // Ocultar overlay cuando todo esté listo
                    $('.card-overlay').fadeOut();
                }
            });

            function getRandomRgb() {
                var num = Math.round(0xffffff * Math.random());
                var r = num >> 10 & 250;
                var g = num >> 35 & 250;
                var b = num & 250;
                return 'rgb(' + r + ', ' + g + ', ' + b + ', ' + 0.2 + ')';
            }

            function formatearNumero(valor) {
                return new Intl.NumberFormat('en-US', {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 2
                }).format(valor || 0);
            }

            // Función para actualizar etiquetas
            function actualizarEtiquetas(data) {
                $('#label_totalImporte').empty();
                $('#label_totalCosto').empty();
                $('#label_utilidades').empty();
                $('#label_cantEfectivo').empty();
                $('#label_porcientEfectivo').empty();
                $('#label_cantTransfer').empty();
                $('#label_porcientTransfer').empty();
                $('#label_porcienImporte').empty();
                $('#label_porcienCosto').empty();
                $('#label_porcienutilidades').empty();

                $.each(data,
                    function (i, item) {
                        $('#label_totalImporte').append(formatearNumero(item.importe_venta));
                        $('#label_porcienImporte').append(formatearNumero(item.pcien_importe) + '%');
                        $('#label_totalCosto').append(formatearNumero(item.costo_venta));
                        $('#label_porcienCosto').append(formatearNumero(item.pcien_costo) + '%');
                        $('#label_utilidades').append(formatearNumero(item.utilidades));
                        $('#label_porcienutilidades').append(formatearNumero(item.pcien_utilidad) + '%');
                        $('#label_cantEfectivo').append(formatearNumero(item.tipo_pago[0].cantidad));
                        $('#label_porcientEfectivo').append(formatearNumero(item.tipo_pago[0].porciento) + '%');
                        $('#label_cantTransfer').append(formatearNumero(item.tipo_pago[1].cantidad));
                        $('#label_porcientTransfer').append(formatearNumero(item.tipo_pago[1].porciento) + '%');
                    });
            }

            // Función para exportar las tablas a xlsx
            function exportarTablaFormateada(idTabla, nombreArchivo = "Reporte.xlsx") {
                const tabla = document.getElementById(idTabla);
                if (!tabla) {
                    console.warn("❌ Tabla no encontrada:", idTabla);
                    return;
                }

                // Clonamos y removemos columnas no exportables
                const tablaClonada = tabla.cloneNode(true);
                tablaClonada.querySelectorAll(".noExport").forEach(el => el.remove());

                const ws = XLSX.utils.table_to_sheet(tablaClonada);
                const wb = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(wb, ws, "Hoja1");

                // Detectar índice de cada columna por el texto del <th>
                const cabeceras = Array.from(tabla.querySelectorAll("thead th"))
                    .map(th => th.textContent.trim());

                const letras = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

                const formatoPorColumna = {
                    "%": "0.00%",
                    "IMP": "$#,##0.00",
                    "COS": "$#,##0.00",
                    "UTI": "$#,##0.00"
                };

                const totalFilas = XLSX.utils.decode_range(ws["!ref"]).e.r + 1;

                cabeceras.forEach((textoColumna, index) => {
                    const letra = letras[index];
                    const formato = formatoPorColumna[textoColumna];

                    if (formato) {
                        for (let i = 2; i <= totalFilas; i++) {
                            const celdaRef = `${letra}${i}`;
                            if (ws[celdaRef]) {
                                ws[celdaRef].t = "n"; // aseguramos que se trate como número
                                ws[celdaRef].s = { numFmt: formato };
                            }
                        }
                    }
                });
                XLSX.writeFile(wb, nombreArchivo);
            }

            // Función para actualizar las tablas y gráficos
            function actualizarTablasYGraficos(data2, data3, data4, data5) {
                window.customTable = new CustomTable();
                const color = getRandomRgb();
                const tabla1 = window.customTable.tables[0];
                const tabla2 = window.customTable.tables[1];
                const tabla3 = window.customTable.tables[2];
                const tabla4 = window.customTable.tables[3];


                const rows1 = data2.iData.map(item => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                                <td><span style = "background-color: ${color}" > ${item.tipo}</span ></td>
                                <td>${formatearNumero(item.cantidad)}</td>
                                <td>${formatearNumero(item.porciento)}</td>
                                <td>${formatearNumero(item.importe)}</td>
                                <td>${formatearNumero(item.costo)}</td>
                                <td>${formatearNumero(item.utilidad)}</td>
                                `;
                    return tr;
                });
                const rows2 = data3.iData.map(item => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                                <td><span style = "background-color: ${color}" > ${item.FechaTexto}</span ></td>
                                <td>${item.TipoOperacion}</td>
                                <td>${formatearNumero(item.Cantidad)}</td>
                                <td>${formatearNumero(item.Porciento)}</td>
                                <td>${formatearNumero(item.Importe)}</td>
                                <td>${formatearNumero(item.Costo)}</td>
                                <td>${formatearNumero(item.Utilidad)}</td>
                                `;
                    return tr;
                });
                const rows3 = data4.iData.map(item => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                                <td><span style = "background-color: ${color}" > ${item.PuntoVenta}</span ></td>
                                <td>${item.TipoOperacion}</td>
                                <td>${formatearNumero(item.cantidad)}</td>
                                <td>${formatearNumero(item.porciento)}</td>
                                <td>${formatearNumero(item.importe)}</td>
                                <td>${formatearNumero(item.costo)}</td>
                                <td>${formatearNumero(item.utilidad)}</td>
                                `;
                    return tr;
                });
                const rows4 = data5.iData.map(item => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                                <td><span style = "background-color: ${color}" > ${item.Cod}</span ></td>
                                <td>${item.Producto}</td>
                                <td>${item.TipoOperacion}</td>
                                <td>${formatearNumero(item.cantidad)}</td>
                                <td>${item.Unidad}</td>
                                <td>${formatearNumero(item.porciento)}</td>
                                <td>${formatearNumero(item.importe)}</td>
                                <td>${formatearNumero(item.costo)}</td>
                                <td>${formatearNumero(item.utilidad)}</td>
                                `;
                    return tr;
                });

                tabla1.fullRefresh(rows1);
                tabla1.fullRefresh(rows1);
                tabla2.fullRefresh(rows2);
                tabla3.fullRefresh(rows3);
                tabla4.fullRefresh(rows4);

                // Renderizar gráficos con ApexCharts     
                let ChartByTipo;
                let ChartByFecha;
                let ChartByPunto;
                let ChartByProducto;

                if (typeof ChartByTipo?.update === "function") {                   
                    ChartByTipo.update(data2.iData, 'Gráfico.1 Distribución por operación(s)');
                } else {
                    // Si no existe, lo creamos por primera vez
                    ChartByTipo = new OperChartByTipo({
                        containerId: '#canvaForVXoperacion',
                        titulo: 'Gráfico.1 Distribución por operación(s)',
                        iData: data2.iData
                    });
                    ChartByTipo.render();
                }

                if (typeof ChartByFecha?.update === "function") {
                    ChartByFecha.update(data3.iData, 'Gráfico.2 Distribución por fecha(s)');
                } else {
                    // Si no existe, lo creamos por primera vez
                    ChartByFecha = new OperChartByFecha({
                        containerId: '#canvaForVXfecha',
                        titulo: 'Gráfico.2 Distribución por fecha(s)',
                        iData: data3.iData
                    });
                    ChartByFecha.render();
                }

                if (typeof ChartByPunto?.update === "function") {
                    ChartByPunto.update(data4.iData, 'Gráfico.3 Distribución por punto(s)');
                } else {
                    // Si no existe, lo creamos por primera vez
                    ChartByPunto = new OperChartByPunto({
                        containerId: '#canvaForVXpunto',
                        titulo: 'Gráfico.3 Distribución por punto(s)',
                        iData: data4.iData
                    });
                    ChartByPunto.render();
                }                              

                if (typeof ChartByProducto?.update === "function") {
                    ChartByProducto.update(data5.iData, 'Gráfico.4 Distribución por producto(s)');
                } else {
                    // Si no existe, lo creamos por primera vez
                    ChartByProducto = new OperChartByProducto({
                        containerId: '#canvaForVXproducto',
                        titulo: 'Gráfico.4 Distribución por producto(s)',
                        iData: data5.iData
                    });
                    ChartByProducto.render();
                }

            }

            function mostrarCardLoader() {
                $('.card-overlay').fadeIn();
                let loader = document.querySelector('.loader');
                if (!loader) return;                
                let overlay = loader.querySelector(".card-overlay");

                if (!overlay) {
                    overlay = document.createElement("div");
                    overlay.classList.add(
                        "card-overlay",
                        "position-absolute",
                        "top-0",
                        "start-0",
                        "w-100",
                        "h-100",                                              
                        "justify-content-center",
                        "align-items-center",
                        "noExport"
                    );
                    overlay.style.zIndex = "10";

                    const spinner = document.createElement("div");
                    spinner.classList.add("spinner-border", "text-primary");
                    spinner.setAttribute("role", "status");

                    const label = document.createElement("span");
                    label.classList.add("visually-hidden");
                    label.textContent = "Cargando...";

                    spinner.appendChild(label);
                    overlay.appendChild(spinner);
                    loader.appendChild(overlay);
                }

                overlay.style.display = "flex";
            }            

            document.getElementById("btnExportExcel1").addEventListener("click", function () {
                exportarTablaFormateada("TableDataForTipo", "Distribución por operación(s).xlsx");
            });
            document.getElementById("btnExportExcel2").addEventListener("click", function () {
                exportarTablaFormateada("TableDataForFecha", "Distribución por fecha(s).xlsx");
            });
            document.getElementById("btnExportExcel3").addEventListener("click", function () {
                exportarTablaFormateada("TableDataForPunto", "Distribución por punto(s).xlsx");
            });
            document.getElementById("btnExportExcel4").addEventListener("click", function () {
                exportarTablaFormateada("TableDataForProducto", "Distribución por producto(s).xlsx");
            });

            document.getElementById("btnPrint1").addEventListener("click", function () {
                let tablaClonada = $("#TableDataForTipo").clone();
                tablaClonada.find(".noExport").remove();
                const ventana = window.open('', '', 'height=800,width=1200');
                ventana.document.write(`
                     <html>
                     <head>
                     <title>Imprimir</title>
                     <style>
                     body {
                         font-family: Arial, sans-serif;
                         margin: 20px;
                         font-size: 11px;
                         color: #333;
                     }
                     h3 {
                         margin-bottom: 5px;
                         color: #004080;
                     }
                     p {
                       margin: 0 0 10px;
                       font-weight: bold;
                   }
                   table {
                       width: 100%;
                       border-collapse: collapse;
                       margin-top: 10px;
                   }
                   th, td {
                       border: 1px solid #999;
                       padding: 6px 4px;
                       text-align: center;
                   }
                   thead {
                       background-color: #004080;
                       color: white;
                       font-weight: bold;
                   }
                   tfoot td {
                       background-color: #f0f0f0;
                       font-weight: bold;
                   }
                   tr:nth-child(even) td {
                       background-color: #f9f9f9;
                   }
                   media print {
                       body {
                           font-size: 12px;
                       }
                   }
                   </style>
                   </head>
                   <body>

                   ${tablaClonada[0].outerHTML}
                   </body>
                   </html>
                   `);
                ventana.document.close();
                ventana.focus();
                ventana.print();
            });
            document.getElementById("btnPrint2").addEventListener("click", function () {
                let tablaClonada = $("#TableDataForFecha").clone();
                tablaClonada.find(".noExport").remove();
                const ventana = window.open('', '', 'height=800,width=1200');
                ventana.document.write(`
                      <html>
                      <head>
                      <title>Imprimir</title>
                      <style>
                      body {
                          font-family: Arial, sans-serif;
                          margin: 20px;
                          font-size: 11px;
                          color: #333;
                      }
                      h3 {
                          margin-bottom: 5px;
                          color: #004080;
                      }
                      p {
                        margin: 0 0 10px;
                        font-weight: bold;
                    }
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-top: 10px;
                    }
                    th, td {
                        border: 1px solid #999;
                        padding: 6px 4px;
                        text-align: center;
                    }
                    thead {
                        background-color: #004080;
                        color: white;
                        font-weight: bold;
                    }
                    tfoot td {
                        background-color: #f0f0f0;
                        font-weight: bold;
                    }
                    tr:nth-child(even) td {
                        background-color: #f9f9f9;
                    }
                    media print {
                        body {
                            font-size: 12px;
                        }
                    }
                    </style>
                    </head>
                    <body>

                    ${tablaClonada[0].outerHTML}
                    </body>
                    </html>
                    `);
                ventana.document.close();
                ventana.focus();
                ventana.print();
            });
            document.getElementById("btnPrint3").addEventListener("click", function () {
                let tablaClonada = $("#TableDataForPunto").clone();
                tablaClonada.find(".noExport").remove();
                const ventana = window.open('', '', 'height=800,width=1200');
                ventana.document.write(`
                            <html>
                            <head>
                            <title>Imprimir</title>
                            <style>
                            body {
                                font-family: Arial, sans-serif;
                                margin: 20px;
                                font-size: 11px;
                                color: #333;
                            }
                            h3 {
                                margin-bottom: 5px;
                                color: #004080;
                            }
                            p {
                              margin: 0 0 10px;
                              font-weight: bold;
                          }
                          table {
                              width: 100%;
                              border-collapse: collapse;
                              margin-top: 10px;
                          }
                          th, td {
                              border: 1px solid #999;
                              padding: 6px 4px;
                              text-align: center;
                          }
                          thead {
                              background-color: #004080;
                              color: white;
                              font-weight: bold;
                          }
                          tfoot td {
                              background-color: #f0f0f0;
                              font-weight: bold;
                          }
                          tr:nth-child(even) td {
                              background-color: #f9f9f9;
                          }
                          media print {
                              body {
                                  font-size: 12px;
                              }
                          }
                          </style>
                          </head>
                          <body>

                          ${tablaClonada[0].outerHTML}
                          </body>
                          </html>
                          `);
                ventana.document.close();
                ventana.focus();
                ventana.print();
            });
            document.getElementById("btnPrint4").addEventListener("click", function () {             
                let tablaClonada = $("#TableDataForProducto").clone();
                tablaClonada.find(".noExport").remove();
                const ventana = window.open('', '', 'height=800,width=1200');
                ventana.document.write(`
                            <html>
                            <head>
                            <title>Imprimir</title>
                            <style>
                            body {
                                font-family: Arial, sans-serif;
                                margin: 20px;
                                font-size: 11px;
                                color: #333;
                            }
                            h3 {
                                margin-bottom: 5px;
                                color: #004080;
                            }
                            p {
                              margin: 0 0 10px;
                              font-weight: bold;
                          }
                          table {
                              width: 100%;
                              border-collapse: collapse;
                              margin-top: 10px;
                          }
                          th, td {
                              border: 1px solid #999;
                              padding: 6px 4px;
                              text-align: center;
                          }
                          thead {
                              background-color: #004080;
                              color: white;
                              font-weight: bold;
                          }
                          tfoot td {
                              background-color: #f0f0f0;
                              font-weight: bold;
                          }
                          tr:nth-child(even) td {
                              background-color: #f9f9f9;
                          }
                          media print {
                              body {
                                  font-size: 12px;
                              }
                          }
                          </style>
                          </head>
                          <body>

                          ${tablaClonada[0].outerHTML}
                          </body>
                          </html>
                          `);
                ventana.document.close();
                ventana.focus();
                ventana.print();
            });          
        });

        async function exportarReporteAgrupado() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF('p', 'mm', 'a4');
            const pageWidth = doc.internal.pageSize.getWidth();
            const margen = 10;
            const fecha = new Date().toLocaleString();

            const conjuntos = [
                { tabla: 'TableDataForTipo', grafico: 'canvaForVXoperacion', titulo: 'Tipo' },
                { tabla: 'TableDataForFecha', grafico: 'canvaForVXfecha', titulo: 'Fecha' },
                { tabla: 'TableDataForPunto', grafico: 'canvaForVXpunto', titulo: 'Punto' },
                { tabla: 'TableDataForProducto', grafico: 'canvaForVXproducto', titulo: 'Producto' }
            ];

            for (let i = 0; i < conjuntos.length; i++) {
                const { tabla, grafico, titulo } = conjuntos[i];
                const imgData = await capturarBloqueConjunto(tabla, grafico);
                if (!imgData) continue;

                if (i > 0) doc.addPage();

                doc.setFontSize(12);
                doc.text(`📌 Reporte por ${titulo}`, margen, 10);
                doc.setFontSize(8);
                doc.text(`Fecha: ${fecha}`, pageWidth - 60, 10);

                const imgProps = doc.getImageProperties(imgData);
                const imgRatio = (pageWidth - 2 * margen) / imgProps.width;
                const imgHeight = imgProps.height * imgRatio;

                doc.addImage(imgData, 'PNG', margen, 20, pageWidth - 2 * margen, imgHeight);
            }

            doc.save('ReporteBloquesUnificados.pdf');
        }
        async function capturarBloqueConjunto(idTabla, idGrafico) {
            const tabla = document.getElementById(idTabla);
            const grafico = document.getElementById(idGrafico);

            if (!tabla || !grafico) {
                console.warn(`Elementos no encontrados: ${idTabla}, ${idGrafico}`);
                return null;
            }

            // Crear contenedor temporal para combinar
            const contenedor = document.createElement("div");
            contenedor.style.display = "block";
            contenedor.style.padding = "15px";
            contenedor.style.background = "#fff";
            contenedor.style.border = "1px solid #ccc";
            contenedor.style.width = "fit-content";
            contenedor.style.position = "absolute";
            contenedor.style.top = "-9999px"; // oculto fuera de pantalla

            const tablaClon = tabla.cloneNode(true);
            const graficoClon = grafico.cloneNode(true);

            contenedor.appendChild(tablaClon);
            contenedor.appendChild(document.createElement("hr"));
            contenedor.appendChild(graficoClon);

            document.body.appendChild(contenedor);

            const canvas = await html2canvas(contenedor, { scale: 2, useCORS: true });
            document.body.removeChild(contenedor);

            return canvas.toDataURL("image/png");
        }    
        
    </script>
}
