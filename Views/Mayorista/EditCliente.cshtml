@model vercom.Models.cliente
@{
    ViewBag.Title = "EDITAR CLIENTE";
    var indexCount = 0;
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>EDITAR CLIENTE</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Mayorista")">Venta mayorista</a>
            </li>
            <li class="active breadcrumb-item">
                <a href="@Url.Action("Cliente", "Mayorista")">Clientes</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Editar Cliente</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Modificar información del Cliente</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        <a class="fullscreen-link"><i class="fa fa-expand"></i></a>
                        <a class="close-link"><i class="fa fa-times"></i></a>
                    </div>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("EditCliente", "Mayorista", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.id)
                        <div class="row">
                            <div class="col-sm-3 b-r">
                                <div class="form-group">
                                    <label>IDENTIFICADOR</label>
                                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>NACIONALIDAD</label>
                                    @Html.EditorFor(model => model.nacionalidad, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.nacionalidad, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>DIRECCIÓN</label>
                                    @Html.TextAreaFor(model => model.direccion, new { @class = "form-control", rows = "3", style = "height:75px", required = "" })
                                    @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>PROVINCIA</label>
                                    @Html.EditorFor(model => model.provincia, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>MUNICIPIO</label>
                                    @Html.EditorFor(model => model.municipio, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.municipio, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>LOCALIDAD</label>
                                    @Html.EditorFor(model => model.localidad, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.localidad, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3 b-r">
                                <div class="form-group">
                                    <label>TIPO DE CLIENTE</label>
                                    <select class="form-control" name="tipoClienteID" id="tipoClienteID" required="">
                                        @Html.Action("_listtiposclientes", "Parcial")
                                    </select>
                                    @Html.ValidationMessageFor(model => model.tipoClienteID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>NIT</label>
                                    <input type="text" id="nit" name="nit" class="form-control" data-mask="99999999999" value="@Model.nit" placeholder="">
                                    @Html.ValidationMessageFor(model => model.nit, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>REEUP</label>
                                    @Html.EditorFor(model => model.reeup, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.reeup, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>RENAE</label>
                                    @Html.EditorFor(model => model.renae, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.renae, "", new { @class = "text-danger" })
                                </div>
                                <button type="button" id="btnAgregarCuenta" class="btn btn-sm btn-secondary float-lg-right">AGREGAR CUENTA</button>
                            </div>
                            <div class="col-lg-6" id="cuentasContainer">
                                @for (var cuentaIndex = 0; cuentaIndex < Model.cliente_cuenta.Count(); cuentaIndex++)
                                {
                                    var cuenta = Model.cliente_cuenta.ElementAt(cuentaIndex);
                                    indexCount++;
                                    <div class="cuenta-bloque col-lg-4 mb-3 float-lg-left">
                                        <div class="form-group">
                                            <label>NUMERO DE CUENTA</label>
                                            <input type="text" name="cuentas[@cuentaIndex].no" value="@cuenta.cuenta.no" data-mask="9999999999999999" class="form-control" required />
                                        </div>
                                        <div class="form-group">
                                            <label>TIPO DE CUENTA</label>
                                            <select name="cuentas[@cuentaIndex].tipo_cuenta" class="form-control" required>
                                                <option value="CUP" @(cuenta.cuenta.tipo_cuenta == "CUP" ? "selected" : "")>CUP</option>
                                                <option value="USD" @(cuenta.cuenta.tipo_cuenta == "USD" ? "selected" : "")>USD</option>
                                                <option value="MLC" @(cuenta.cuenta.tipo_cuenta == "MLC" ? "selected" : "")>MLC</option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label>TITULAR</label>
                                            <input type="text" name="cuentas[@cuentaIndex].titular" value="@cuenta.cuenta.titular" class="form-control" required />
                                        </div>
                                        <div class="form-group">
                                            <label>AGENCIA</label>
                                            <input type="text" name="cuentas[@cuentaIndex].agencia" value="@cuenta.cuenta.agencia" class="form-control" required />
                                        </div>
                                        <div class="form-group">
                                            <label>BANCO</label>
                                            <input type="text" name="cuentas[@cuentaIndex].banco" value="@cuenta.cuenta.banco" class="form-control" required />
                                        </div>
                                        <div class="form-group">
                                            <label>DIRECCIÓN DEL BANCO</label>
                                            <textarea class="form-control" cols="20" name="cuentas[@cuentaIndex].direccion" required="" rows="3" style="height:75px">@cuenta.cuenta.direccion</textarea>
                                        </div>
                                        <button type="button" onclick="eliminarCuenta(@cuentaIndex)" class="btn btn-outline-danger btn-sm mt-2">
                                            <i class="fa fa-trash"></i> Eliminar
                                        </button>
                                    </div>
                                }
                            </div>
                            <div class="col-lg-12">
                                <a href="@Url.Action("Cliente")" class="btn btn-default float-left m-t-n-xs"><i class="fa fa-arrow-left"></i> REGRESAR</a>
                                <br />
                                <button class="btn btn-sm btn-outline-primary float-lg-right m-t-n-xs" type="submit" id="btn-agregarCliente"><strong>ACTUALIZAR</strong></button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/toastrStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/toastr")
    <script type="text/javascript">
        let cuentaIndex = $("#cuentasContainer .cuenta-bloque").length; // Inicializar correctamente

        function eliminarCuenta(index) {
            $("#cuenta_" + index).remove();

            // 🔥 Recalcular los índices de las cuentas restantes
            $(".cuenta-bloque").each(function (i) {
                $(this).attr("id", `cuenta_${i}`);
                $(this).find("input, select, textarea").each(function () {
                    let nameAttr = $(this).attr("name");
                    if (nameAttr) {
                        $(this).attr("name", nameAttr.replace(/\[\d+\]/, `[${i}]`));
                    }
                });
            });

            cuentaIndex--; // Reducir el índice correctamente
        }

        $(document).ready(function () {
            $("#btnAgregarCuenta").click(function () {
                let nuevaCuentaHtml = `
                    <div class="cuenta-bloque col-lg-4 mb-3 float-lg-left" id="cuenta_${cuentaIndex}">
                        <div class="form-group">
                            <label>NUMERO DE CUENTA</label>
                            <input type="text" name="cuentas[${cuentaIndex}].no" class="form-control"  data-mask="9999999999999999" required />
                        </div>
                        <div class="form-group">
                            <label>TIPO DE CUENTA</label>
                            <select name="cuentas[${cuentaIndex}].tipo_cuenta" class="form-control" required>
                                <option value="CUP">CUP</option>
                                <option value="USD">USD</option>
                                <option value="MLC">MLC</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>TITULAR</label>
                            <input type="text" name="cuentas[${cuentaIndex}].titular" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label>AGENCIA</label>
                            <input type="text" name="cuentas[${cuentaIndex}].agencia" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label>BANCO</label>
                            <input type="text" name="cuentas[${cuentaIndex}].banco" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label>DIRECCIÓN DEL BANCO</label>
                            <textarea class="form-control" name="cuentas[${cuentaIndex}].direccion" required rows="3" style="height:75px"></textarea>
                        </div>
                        <button type="button" onclick="eliminarCuenta(${cuentaIndex})" class="btn btn-outline-danger btn-sm mt-2">
                            <i class="fa fa-trash"></i> Eliminar
                        </button>
                    </div>`;

                $("#cuentasContainer").append(nuevaCuentaHtml);
                cuentaIndex++; // Aumentar índice correctamente
            });
        });
    </script>
}
