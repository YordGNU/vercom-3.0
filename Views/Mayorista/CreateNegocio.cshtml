@model vercom.Models.negocio
@{
    ViewBag.Title = "AGREGAR NEGOCIO";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>AGREGAR NEGOCIO</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Mayorista")">Venta mayorista</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Mayorista")">Negocios</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Agregar negocio</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins" id="ibox">
                <div class="ibox-title">
                    <h5>AGREGAR NEGOCIO <small class="m-l-sm">Introduzca los datos del negocio que desea registrar</small></h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="fullscreen-link">
                            <i class="fa fa-expand"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-4 b-r">
                            <form role="form" method="post" action="@Url.Action("CreateNegocio", "Mayorista")">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary()
                                <div class="form-group" id="data_1">
                                    <label class="font-normal">FECHA</label>
                                    <div class="input-group date">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span><input type="text" name="fecha" id="fecha" class="form-control" value="@DateTime.Now.ToString("d")" required="">
                                    </div>
                                    @Html.ValidationMessageFor(model => model.fecha)
                                </div>
                                <div class="form-group">
                                    <label>PRODUCO | SERVICIO</label>
                                    <select class="form-control" name="productoID" id="productoID" required="">
                                        @Html.Action("_listproductos_servicios", "Parcial")
                                    </select>
                                    @Html.ValidationMessageFor(model => model.productoID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>CLIENTE</label>
                                    @Html.DropDownList("clienteID", null, htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.clienteID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>CANTIDAD</label>
                                    @Html.EditorFor(model => model.cantidad, new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>IMPORTE TOTAL</label>
                                    <input type="text" id="importeTotal" class="form-control" readonly />
                                </div>
                                <div class="form-group">
                                    <label>TIPO DE OPEREACIÒN</label>
                                    @Html.DropDownList("operacionID", null, htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.operacionID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>TIPO DE FACTURA</label>
                                    @Html.DropDownList("facturaID", null, htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.facturaID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>MEDIO DE PAGO</label>
                                    @Html.DropDownList("medioPagoID", null, htmlAttributes: new { @class = "form-control", @required = "" })
                                    @Html.ValidationMessageFor(model => model.medioPagoID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>FACTURA</label>
                                    @Html.EditorFor(model => model.factura, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.factura, "", new { @class = "text-danger" })
                                </div>
                                <div>
                                    <a href="@Url.Action("Index")" class="btn btn-default float-left m-t-n-xs"><i class="fa fa-arrow-left"></i> REGRESAR</a>
                                    <button class="btn btn-sm btn-outline-primary float-right m-t-n-xs" type="submit"><strong>AGREGAR</strong></button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/toastrStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/toastr")
    <script src="@Url.Content("~/Scripts/decimal.js")"></script>
    <script type="text/javascript">
    $(document).ready(function () {

                toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1800",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            if ('@ViewBag.error') {
                toastr.error('@ViewBag.error', 'Error!');
            }

        $('#data_1 .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                format: "dd/mm/yyyy",
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });
        });
    </script>
    <script>
        $(document).ready(function () {

            var selectProductos = $("#productoID").chosen();

            $("#cantidad").on("keyup", function () {
                calcularImporte();
            });

            $("#productoID").on("change", function () {
                calcularImporte(); // Sigue funcionando cuando se selecciona otro producto
            });

            $('#cantidad').change(function () {
                let precio = document.getElementById("precio").value;
                let cantidad = document.getElementById("cantidad").value;
                let cantidadp = document.getElementById("cantidadp").value;
                let operacion = document.getElementById("tipo_operacionid").value;
                var cantEnt = cantidad;
                var tmpCanP = cantidadp;
                cantidad = cantidad.replace(",", ".");
                let a = new Decimal(precio);
                let b = new Decimal(cantidad);
                let c = a.mul(b).toNumber();
                let d = cantidadp - cantidad;
                let e = new Decimal(cantidadp);
                if (cantidadp == 0) {
                    document.getElementById("cantidadp").value = cantidad;
                    document.getElementById("cantrest").value = 0;
                    document.getElementById("importe").value = c;
                } else {
                    if (operacion == 1) {
                        $('#cantidadp').empty();
                        let oper = (parseFloat(b) + parseFloat(e));
                        document.getElementById("cantidadp").value = oper;
                        document.getElementById("importe").value = c;
                    } else {
                        document.getElementById("cantrest").value = d;
                        document.getElementById("importe").value = c;
                    }
                }
            });

            function calcularImporte() {
                var cantidad = $("#cantidad").val().replace(",", ".") || 0;
                var precioUnitario = $("#productoID option:selected").data("precio").replace(",", ".") || 0;
                let a = new Decimal(precioUnitario);
                let b = new Decimal(cantidad);               
                let importeTotal = a.mul(b).toNumber();             
                $("#importeTotal").val(importeTotal.toFixed(2)); // Mostrar resultado con dos decimales
            }
        });
    </script>

}
