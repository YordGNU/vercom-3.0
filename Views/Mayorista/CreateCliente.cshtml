@model vercom.Models.cliente
@{
    ViewBag.Title = "AGREGAR CLIENTE";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>AGREGAR CLIENTE</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Mayorista")">Venta mayorista</a>
            </li>
            <li class="active breadcrumb-item">
                <a href="@Url.Action("Cliente", "Mayorista")">Clientes</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Agregar cliente</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins" id="ibox">
                <div class="ibox-title">
                    <h5>AGREGAR CLIENTE <small class="m-l-sm">Introduzca los datos del cliente que desea registrar</small></h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="fullscreen-link">
                            <i class="fa fa-expand"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("CreateCliente", "Mayorista", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary()
                        <div class="row">
                            <div class="col-sm-3 b-r">
                                <div class="form-group">
                                    <label>IDENTIFICADOR</label>
                                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>NACIONALIDAD</label>
                                    @Html.EditorFor(model => model.nacionalidad, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.nacionalidad, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>DIRECCIÓN</label>
                                    @Html.TextAreaFor(model => model.direccion, new { @class = "form-control", rows = "3", style="height:75px", required = "" })
                                    @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>PROVINCIA</label>
                                    @Html.EditorFor(model => model.provincia, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>MUNICIPIO</label>
                                    @Html.EditorFor(model => model.municipio, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.municipio, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>LOCALIDAD</label>
                                    @Html.EditorFor(model => model.localidad, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                                    @Html.ValidationMessageFor(model => model.localidad, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3 b-r">
                                <div class="form-group">
                                    <label>TIPO DE CLIENTE</label>
                                    <select class="form-control" name="tipoClienteID" id="tipoClienteID" required="">
                                        @Html.Action("_listtiposclientes", "Parcial")                                     
                                    </select>
                                    @Html.ValidationMessageFor(model => model.tipoClienteID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>NIT</label>
                                    <input type="text" id="nit" name="nit" class="form-control" data-mask="99999999999" placeholder="">                                  
                                    @Html.ValidationMessageFor(model => model.nit, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>REEUP</label>
                                    @Html.EditorFor(model => model.reeup, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.reeup, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>RENAE</label>
                                    @Html.EditorFor(model => model.renae, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.renae, "", new { @class = "text-danger" })
                                </div>
                                <button type="button" id="btnAgregarCuenta" class="btn btn-sm btn-secondary float-lg-right">AGREGAR CUENTA</button>
                            </div>
                            <div class="col-lg-6" id="cuentasContainer"></div>
                            <div class="col-lg-12">
                                <a href="@Url.Action("Index")" class="btn btn-default float-left m-t-n-xs"><i class="fa fa-arrow-left"></i> REGRESAR</a>
                                <br />
                                <button class="btn btn-sm btn-outline-primary float-lg-right m-t-n-xs" type="submit" id="btn-agregarCliente"><strong>AGREGAR</strong></button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/toastrStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/toastr")   
    <script type="text/javascript">
    $(document).ready(function () {
                toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1800",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            if ('@ViewBag.error') {
                toastr.error('@ViewBag.error', 'Error!');
            }
      
        });
    </script>
    <script>
        let cuentaIndex = 0; // Variable global para manejar índices correctamente

        document.getElementById("btnAgregarCuenta").addEventListener("click", function () {
            let container = document.getElementById("cuentasContainer");

            let div = document.createElement("div");
            div.setAttribute("id", `cuenta_${cuentaIndex}`);
            div.classList.add("cuenta-bloque", "col-lg-4", "mb-3", "float-lg-left" );

            div.innerHTML = `
                <div class="form-group">
                    <label>NUMERO DE CUENTA</label>
                    <input type="text" name="cuentas[${cuentaIndex}].no" data-mask="9999999999999999" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>TIPO DE CUENTA</label>
                    <select name="cuentas[${cuentaIndex}].tipo_cuenta" class="form-control" required>
                        <option value="CUP">CUP</option>
                        <option value="USD">USD</option>
                        <option value="MLC">MLC</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>TITULAR</label>
                    <input type="text" name="cuentas[${cuentaIndex}].titular" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>AGENCIA</label>
                    <input type="text" name="cuentas[${cuentaIndex}].agencia" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>BANCO</label>
                    <input type="text" name="cuentas[${cuentaIndex}].banco" class="form-control" required />
                </div>
                <div class="form-group">
                    <label>DIRECCIÓN DEL BANCO</label>
                    <textarea  class="form-control" cols="20" name="cuentas[${cuentaIndex}].direccion"  required="" rows="3" style="height:75px"></textarea>               
                </div>
                <button type="button" onclick="eliminarCuenta(${cuentaIndex})" class="btn btn-outline-danger btn-sm mt-2">
                    <i class="fa fa-trash"></i> Eliminar
                </button>
            `;

            container.appendChild(div);
            cuentaIndex++; // Aumentamos el índice para la próxima cuenta
        });

        function eliminarCuenta(index) {
            let cuenta = document.getElementById(`cuenta_${index}`);
            if (cuenta) {
                cuenta.remove();
            }
        }
    </script>

}
