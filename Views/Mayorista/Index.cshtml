@using Newtonsoft.Json;
@{
    ViewBag.Title = "VENTA MAYORISTA";
}
<div class="page-title-head d-flex align-items-center">
    <div class="flex-grow-1">
        <h4 class="fs-sm text-uppercase fw-bold m-0">VENTA MAYORISTA</h4>
    </div>
    <div class="text-end">
        <ol class="breadcrumb m-0 py-0">
            <li class="breadcrumb-item">
                <a href="javascript: void(0);">VERCOM</a>
            </li>           
            <li class="breadcrumb-item active">VENTA MAYORISTA</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <!-- Simple card -->
        <div class="card">
            <div class="card-body">
                @{
                    var date = DateTime.Now;
                    var oPrimerDiaDelMes = new DateTime(date.Year, date.Month, 1);
                    var oUltimoDiaDelMes = oPrimerDiaDelMes.AddMonths(1).AddDays(-1);
                }
                <form>
                    <div class="row gy-2 gx-2 justify-content-end">
                        <div class="col-3">
                            <div class="input-group">
                                <div class="input-daterange input-group" id="datePickerRange">
                                    <div class="input-group-text">
                                        <i data-lucide="calendar"
                                           class="app-search-icon text-muted"></i>
                                    </div>
                                    <input type="text" class="form-control date" id="start" name="start" placeholder="Desde"
                                           value="@oPrimerDiaDelMes.ToString("d")" data-toggle="date-picker"
                                           data-single-date-picker="true">
                                    <div class="input-group-text"> AL </div>
                                    <input type="text" class="form-control date" id="end" name="end" placeholder="Hasta"
                                           data-toggle="date-picker" data-single-date-picker="true"
                                           value="@oUltimoDiaDelMes.ToString("d")">
                                </div>
                            </div>
                        </div>
                        <div class="col-5">
                            <div class="form-group">
                                <select class="form-control" name="productoID" id="productoID">
                                    <option value="0">Producto - Servicio</option>
                                    @Html.Action("_listproductos_servicios", "Parcial")
                                </select>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <select class="form-control" name="clienteID" id="clienteID">
                                    <option value="0">Cliente</option>
                                    @Html.Action("_listclientes", "Parcial")
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <select class="form-control" name="operacionID" id="operacionID">
                                    <option value="0">Forma de operación</option>
                                    @Html.Action("_listformaoperacion", "Parcial")
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <select class="form-control" name="facturaID" id="facturaID">
                                    <option value="0">Tipo de factura</option>
                                    @Html.Action("_listtipofactura", "Parcial")
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <select class="form-control" name="medioPagoID" id="medioPagoID">
                                    <option value="0">Medio de pago</option>
                                    @Html.Action("_listmediopago", "Parcial")
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <input type="text" name="factura" id="factura" placeholder="No. Factura" class="form-control" />
                            </div>
                        </div>
                        <div class="col-auto">
                            <button type="button" class="btn btn-primary mb-2" id="filterOper">
                                <i data-lucide="filter" class="fs-lg"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
            <!-- end card-body-->
        </div>
        <!-- end card-->
    </div>
    <!-- end col -->
</div>
<div class="row row-cols-xxl-3 row-cols-md-3 row-cols-1 align-items-center g-1">
    <div class="col">
        <div class="card mb-0">
            <div class="card-body">
                <h5 title="Total Products">Saldo inicial</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-primary rounded-circle fs-22">
                            <i class="ti ti-package"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="dataSaldo">0,00</h3>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-0">
            <div class="card-body">
                <h5 title="Customer Orders">Entradas</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-secondary rounded-circle fs-22">
                            <i class="ti ti-shopping-bag-plus"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="dataEntradas">0,00</h3>
                    <span class="badge badge-soft-secondary fw-medium ms-2 fs-xs ms-auto" id="dataPorcE"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-0">
            <div class="card-body">
                <h5 title="Sales Today">Ventas</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-success rounded-circle fs-22">
                            <i class="ti ti-currency-dollar"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="dataVentas">0,00</h3>
                    <span class="badge badge-soft-success fw-medium ms-2 fs-xs ms-auto" id="dataPorcV"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Customer Count">Devoluciones</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-info rounded-circle fs-22">
                            <i class="ti ti-arrow-back-up-double"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="dataDevol">0,00</h3>
                    <span class="badge badge-soft-info fw-medium ms-2 fs-xs ms-auto" id="dataPorcD"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Total Revenue">Saldo final</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-warning rounded-circle fs-22">
                            <i class="ti ti-package-export"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="dataSaldoF">0,00</h3>
                    <span class="badge badge-soft-warning fw-medium ms-2 fs-xs ms-auto"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card mb-1">
            <div class="card-body">
                <h5 title="Total Revenue">Saldo final</h5>
                <div class="d-flex align-items-center gap-2 my-3">
                    <div class="avatar-md flex-shrink-0">
                        <span class="avatar-title text-bg-warning rounded-circle fs-22">
                            <i class="ti ti-package-export"></i>
                        </span>
                    </div>
                    <h3 class="mb-0" id="dataSaldoF">0,00</h3>
                    <span class="badge badge-soft-warning fw-medium ms-2 fs-xs ms-auto"></span>
                </div>
            </div>
        </div>
    </div>
</div><!-- end row -->
<div class="row">
    <div class="col-lg-12">
        <div class="card ">
            <div class="card-header">
                <div class="card-title">
                    <h5>VENTAS</h5>
                </div>
                <div class="float-right">
                    <div class="btn-group">
                        <button type="button" value="day" onclick="updateChar(this)" class="btn btn-xs btn-info">Hoy</button>
                        <button type="button" value="month" onclick="updateChar(this)" class="btn btn-xs btn-info">Este Mes</button>
                        <button type="button" value="year" onclick="updateChar(this)" class="btn btn-xs btn-info">Este Año</button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-8">
                        <div class="chart-container">
                            <div id="spinner1" class="spinner-overlay" style="display:none">
                                <div class="sk-spinner sk-spinner-wave">
                                    <div class="sk-rect1"></div>
                                    <div class="sk-rect2"></div>
                                    <div class="sk-rect3"></div>
                                    <div class="sk-rect4"></div>
                                    <div class="sk-rect5"></div>
                                </div>
                            </div>
                            <canvas id="clientes"></canvas>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="chart-container">
                            <div id="spinner2" class="spinner-overlay" style="display:none">
                                <div class="sk-spinner sk-spinner-wave">
                                    <div class="sk-rect1"></div>
                                    <div class="sk-rect2"></div>
                                    <div class="sk-rect3"></div>
                                    <div class="sk-rect4"></div>
                                    <div class="sk-rect5"></div>
                                </div>
                            </div>
                            <canvas id="tcliente" height="550"></canvas>
                        </div>
                    </div>
                    <div class="col-lg-12 hr-line-dashed"></div>
                    <div class="col-lg-8">
                        <div class="chart-container">
                            <div id="spinner3" class="spinner-overlay" style="display:none">
                                <div class="sk-spinner sk-spinner-wave">
                                    <div class="sk-rect1"></div>
                                    <div class="sk-rect2"></div>
                                    <div class="sk-rect3"></div>
                                    <div class="sk-rect4"></div>
                                    <div class="sk-rect5"></div>
                                </div>
                            </div>
                            <canvas id="foperacion"></canvas>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="chart-container">
                            <div id="spinner4" class="spinner-overlay" style="display:none">
                                <div class="sk-spinner sk-spinner-wave">
                                    <div class="sk-rect1"></div>
                                    <div class="sk-rect2"></div>
                                    <div class="sk-rect3"></div>
                                    <div class="sk-rect4"></div>
                                    <div class="sk-rect5"></div>
                                </div>
                            </div>
                            <canvas id="mpago" height="550"></canvas>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@section Styles {
    <link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
}


@section Scripts {
    <script src="~/Scripts/plugins/toastr/toastr.min.js"></script>
    <script src="~/Scripts/plugins/moment/moment.min.js"></script>
    <script src="~/Scripts/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Scripts/plugins/choices/choices.min.js"></script>
    <script src="~/Scripts/plugins/table2excel/table2excel.js"></script>
    <script src="~/Scripts/custom-table.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            const formato = 'DD/MM/YYYY';
            $('#datePickerRange').daterangepicker({
                startDate: moment().startOf('month'),
                endDate: moment().endOf('month'),
                singleDatePicker: false,
                showDropdowns: true,
                autoUpdateInput: true,
                cancelClass: "btn-light",
                applyButtonClasses: "btn-success",
                opens: 'center',
                locale: {
                    format: formato,
                    separator: ' - ',
                    applyLabel: 'Aplicar',
                    cancelLabel: 'Cancelar',
                    fromLabel: 'Desde',
                    toLabel: 'Hasta',
                    customRangeLabel: 'Personalizado',
                    daysOfWeek: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                    monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                        'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                    firstDay: 1
                }
            }, function (start, end) {
                $('#start').val(start.format(formato));
                $('#end').val(end.format(formato));
            });

            productoChoices = new Choices('#productoID');

            @*var barData1 = {
                labels: [],
                datasets: [
                    {
                        label: "UNIDADES",
                        backgroundColor: "rgba(26,179,148,1)", // Color verde como en la imagen
                        borderColor: "rgba(47,64,80,1)",
                        data: [],
                        yAxisID: 'y',
                    },
                    {
                        label: "UTILIDAD",
                        type: 'bar',
                        backgroundColor: "rgba(35,198,200,0.7)", // Azul claro
                        borderColor: "rgba(35,198,200,0.7)",
                        data: [],
                        yAxisID: 'y1',
                    }
                ]
            };

            var barOptions1 = {
                responsive: true,
                maintainAspectRatio: true,
                indexAxis: 'x', // Cambia la orientación a vertical
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                stacked: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'DISTRIBUCIÓN DE UINDADES/UTILIDAD POR CLIENTE'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Unidades vendidas'
                        }
                    },
                    y1: {
                        position: 'right',
                        title: {
                            display: true,
                            text: 'Utilidad ($)'
                        },
                        grid: {
                            drawOnChartArea: false
                        },
                        ticks: {
                            callback: function (value) {
                                return value.toLocaleString();
                            }
                        }
                    },
                    x: {
                        ticks: {
                            autoSkip: false,
                        }
                    }
                }

            };

            var barData2 = {
                labels: [],
                datasets: [
                    {
                        label: "PORCENTAJE",
                        backgroundColor: "rgba(26,179,148,1)",
                        borderColor: "rgba(47,64,80,1)",
                        data: [],
                        tension: 0.5,
                        yAxisID: 'y',
                    },
                    {
                        label: "UTILIDAD",
                        type: 'bar',
                        backgroundColor: "rgba(35,198,200,0.7)", // Azul claro
                        borderColor: "rgba(35,198,200,0.7)",
                        data: [],
                        yAxisID: 'y1',
                    }
                ]
            };

            var barOptions2 = {
                responsive: true,
                maintainAspectRatio: true,
                indexAxis: 'x', // Cambia la orientación a vertical
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                stacked: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'DISTRIBUCIÓN DE PORCENTAJE/UTILIDAD POR FORMA DE OPERACIÓN'
                    },
                    datalabels: {
                        anchor: 'end',
                        align: 'top',
                        formatter: (value) => value.toFixed(2) + '%',
                        color: '#000',
                        font: {
                            weight: 'bold'
                        }
                    },
                    annotation: {
                        annotations: {
                            textoPersonalizado: {
                                type: 'label',
                                position: { x: '50%', y: '50%' },
                                content: ['¡Dato importante aquí!'],
                                font: { size: 14, weight: 'bold' },
                                color: 'red',
                                padding: 5,
                                borderRadius: 4,
                                backgroundColor: 'white',
                                borderWidth: 1,
                                borderColor: 'black'
                            }
                        }
                    }

                },
                scales: {
                    y: {
                        position: 'left',
                        beginAtZero: true,
                        max: 100, // Establece el límite superior de la escala en 100
                        title: {
                            display: true,
                            text: 'Porcentaje (%)'
                        }
                    },
                    y1: {
                        position: 'right',
                        title: {
                            display: true,
                            text: 'Utilidad ($)'
                        },
                        grid: {
                            drawOnChartArea: false
                        },
                        ticks: {
                            callback: function (value) {
                                return value.toLocaleString();
                            }
                        }
                    },
                    x: {
                        ticks: {
                            autoSkip: false,
                        }
                    }
                }
            };

            var piedata1 = {
                labels: [],
                datasets: [{
                    label: '%',
                    data: [],
                    backgroundColor: [],
                    hoverOffset: 4
                }]
            };

            var pieOptions1 = {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        position: 'bottom' // Mueve las etiquetas debajo del gráfico
                    }
                }

            };

            var piedata2 = {
                labels: [],
                datasets: [{
                    label: '%',
                    data: [],
                    backgroundColor: [],
                    hoverOffset: 4
                }]
            };

            var pieOptions2 = {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        position: 'bottom' // Mueve las etiquetas debajo del gráfico
                    }
                }

            };

            var ctx0 = document.getElementById("clientes").getContext("2d");
            var ctx1 = document.getElementById("tcliente").getContext("2d");
            var ctx2 = document.getElementById("foperacion").getContext("2d");
            var ctx3 = document.getElementById("mpago").getContext("2d");

            var graf1 = new Chart(ctx0, { type: 'bar', data: barData1, options: barOptions1 });
            var graf2 = new Chart(ctx1, { type: 'doughnut', data: piedata1, options: pieOptions1 });
            var graf3 = new Chart(ctx2, { type: 'bar', data: barData2, options: barOptions2 });
            var graf4 = new Chart(ctx3, { type: 'doughnut', data: piedata2, options: pieOptions2 });

            var data = @Html.Raw(ViewData["dist_vcliente"]);
            var dataTcliente = @Html.Raw(ViewData["dist_tcliente"]);
            var dataMpago = @Html.Raw(ViewData["dist_mpago"]);
            var dataCventa = @Html.Raw(ViewData["dist_cventa"]);

            data.sort((a, b) => b.Utilidad - a.Utilidad);
            dataTcliente.sort((a, b) => b.Porcentaje - a.Porcentaje);
            dataMpago.sort((a, b) => b.Porcentaje - a.Porcentaje);
            dataCventa.sort((a, b) => b.Utilidad - a.Utilidad);

            function getRandomRgb() {
                var num = Math.round(0xffffff * Math.random());
                var r = num >> 0 & 30;
                var g = num >> r & 255;
                var b = num >> g & 184;
                return 'rgb(' + r + ', ' + g + ', ' + b + ', ' + 0.3 + ')';
            }

            $.each(data, function (i, item) {
                barData1.labels.push(item.grp);
                barData1.datasets[0].data.push(item.Cantidad);
                barData1.datasets[1].data.push(item.Utilidad);
            });

            $.each(dataTcliente, function (i, item) {
                var colorRGB = getRandomRgb();
                piedata1.labels.push(item.grp + ' - (' + item.Porcentaje.toFixed(2) + '%)');
                piedata1.datasets[0].data.push(item.Porcentaje.toFixed(2));
                piedata1.datasets[0].backgroundColor.push(colorRGB);
            });

            $.each(dataMpago, function (i, item) {
                var colorRGB = getRandomRgb();
                piedata2.labels.push(item.grp + ' - (' + item.Porcentaje.toFixed(2) + '%)');
                piedata2.datasets[0].data.push(item.Porcentaje.toFixed(2));
                piedata2.datasets[0].backgroundColor.push(colorRGB);
            });

            $.each(dataCventa, function (i, item) {
                barData2.labels.push(item.grp);
                barData2.datasets[0].data.push(item.Porcentaje.toFixed(2));
                barData2.datasets[1].data.push(item.Utilidad);
            });


            if (graf1) {
                graf1.destroy();
                graf1 = new Chart(ctx0, { type: 'bar', data: barData1, options: barOptions1 });
            } else {
                graf1 = new Chart(ctx0, { type: 'bar', data: barData1, options: barOptions1 });
            }

            if (graf2) {
                graf2.destroy();
                graf2 = new Chart(ctx1, { type: 'doughnut', data: piedata1, options: pieOptions1 });
            } else {
                graf2 = new Chart(ctx1, { type: 'doughnut', data: piedata1, options: pieOptions1 });
            }

            if (graf3) {
                graf3.destroy();
                graf3 = new Chart(ctx2, { type: 'bar', data: barData2, options: barOptions2 });
            } else {
                graf3 = new Chart(ctx2, { type: 'bar', data: barData2, options: barOptions2 });
            }

            if (graf4) {
                graf4.destroy();
                graf4 = new Chart(ctx3, { type: 'doughnut', data: piedata2, options: pieOptions2 });
            } else {
                graf4 = new Chart(ctx3, { type: 'doughnut', data: piedata2, options: pieOptions2 });
            }

            $('#filterMay').click(async function () {
                try {
               // Obtener valores de entrada en un solo objeto
               var parametros = {
                   inicio: $('#star').val(),
                   fin: $('#end').val(),
                   productoID: $("#productoID").val(),
                   clienteID: $("#clienteID").val(),
                   operacionID: $("#operacionID").val(),
                   facturaID: $("#facturaID").val(),
                   medioPagoID: $("#medioPagoID").val(),
                   factura: $("#factura").val()
               };

               // URLs de los servicios
               var url1 = '@Url.Action("MayoristaGeneralData", "Mayorista")';
               var url2 = '@Url.Action("MayoristaDistVCliente", "Mayorista")';
               var url3 = '@Url.Action("MayoristaDistTipoCliente", "Mayorista")';
               var url4 = '@Url.Action("MayoristaDistVCanal", "Mayorista")';
               var url5 = '@Url.Action("MayoristaDistMedioPago", "Mayorista")';

               async function obtenerDatos(url, parametros) {
                   const queryParams = new URLSearchParams(parametros).toString();
                   try {
                       let response = await fetch(`${url}?${queryParams}`, { method: "GET" }); // Agregar parámetros a la URL
                       if (!response.ok) throw new Error(`Error en ${url}: ${response.status}`);
                       return await response.json();
                   } catch (error) {
                       console.error(`Error al obtener datos de ${url}:`, error);
                       return null;
                   }
               }


               // Obtener datos en paralelo con async/await
               const [data1, data2, data3, data4, data5] = await Promise.all([
                   obtenerDatos(url1, parametros),
                   obtenerDatos(url2, parametros),
                   obtenerDatos(url3, parametros),
                   obtenerDatos(url4, parametros),
                   obtenerDatos(url5, parametros),
               ]);

               actualizarEtiquetas(data1);
               actualizarGraficos(data2, data3, data4,  data5);

           } catch (error) {
               console.error("Error al obtener los datos:", error);
           }
       });

       // Función para actualizar etiquetas
            function actualizarEtiquetas(data) {

           $('#label_totalimporte').empty();
           $('#label_totalcosto').empty();
           $('#label_totalutilidades').empty();

           $('#label_modCliente').empty();
           $('#label_modProducto').empty();
           $('#label_modCanal').empty();

           $.each(data,
               function (i, item) {

                   $('#label_totalimporte').append(item.TotalImpVentas.toFixed(2));
                   //$('#label_porcienImporte').append(item.pcien_importe);

                   $('#label_totalcosto').append(item.TotalCostVentas.toFixed(2));
                   //$('#label_porcienCosto').append(item.pcien_costo);

                   $('#label_totalutilidades').append(item.TotalUtilidades.toFixed(2));
                   //$('#label_porcienutilidades').append(item.pcien_utilidad);

                   $('#label_modCliente').append(item.modaClienteNombre);
                   $('#label_modProducto').append(item.modaProductoServi);
                   $('#label_modCanal').append(item.modaFormaOperacion);

               });
            }

         // Función para actualizar la tabla y el gráfico
            function actualizarGraficos(data2, data3, data4, data5) {

                // Mostrar spinners
                $("#spinner1").show();
                $("#spinner2").show();
                $("#spinner3").show();
                $("#spinner4").show();

                // Ocultar canvas si se desea
                $("#clientes").hide();
                $("#tcliente").hide();
                $("#foperacion").hide();
                $("#mpago").hide();

                data2.sort((a, b) => b.Cantidad - a.Cantidad);
                data3.sort((a, b) => b.Porcentaje - a.Porcentaje);
                data4.sort((a, b) => b.Utilidad - a.Utilidad);
                data5.sort((a, b) => b.Porcentaje - a.Porcentaje);

                const Graf1newLabel = data2.map(i => i.grp);
                const Graf1newData = data2.map(i => i.Cantidad);
                const Graf1newData2 = data2.map(i => i.Utilidad);

                graf1.data.labels = Graf1newLabel;
                graf1.data.datasets[0].data = Graf1newData;
                graf1.data.datasets[1].data = Graf1newData2;
                graf1.update();

                $("#spinner1").hide();
                $("#clientes").fadeIn();

                const Graf2newLabel = data3.map(i => i.grp + ' - (' + i.Porcentaje.toFixed(2) + '%)');
                const Graf2newData = data3.map(i => i.Porcentaje.toFixed(2));

                graf2.data.labels = Graf2newLabel;
                graf2.data.datasets[0].data = Graf2newData;

                graf2.update();

                $("#spinner2").hide();
                $("#tcliente").fadeIn();

                const Graf3newLabel = data4.map(i => i.grp);
                const Graf3newData = data4.map(i => i.Porcentaje.toFixed(2));
                const Graf3newData2 = data4.map(i => i.Utilidad);

                graf3.data.labels = Graf3newLabel;
                graf3.data.datasets[0].data = Graf3newData;
                graf3.data.datasets[1].data = Graf3newData2;
                graf3.update();

                $("#spinner3").hide();
                $("#foperacion").fadeIn();

                const Graf4newLabel = data5.map(i => i.grp + ' - (' + i.Porcentaje.toFixed(2) + '%)');
                const Graf4newData = data5.map(i => i.Porcentaje.toFixed(2));

                graf4.data.labels = Graf4newLabel;
                graf4.data.datasets[0].data = Graf4newData;

                graf4.update();

                $("#spinner4").hide();
                $("#mpago").fadeIn();

            }*@
        });
    </script>
}

