@{
    ViewBag.Title = "PRODUCTOS";
}
<div class="page-title-head d-flex align-items-center">
    <div class="flex-grow-1">
        <h4 class="fs-sm text-uppercase fw-bold m-0">PRODUCTOS</h4>
    </div>
    <div class="text-end">
        <ol class="breadcrumb m-0 py-0">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index","Home")">VERCOM</a>
            </li>
            <li class="breadcrumb-item">
                <a href="#">PRODUCTOS</a>
            </li>
            <li class="breadcrumb-item active">LISTA</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div data-table="" data-table-rows-per-page="50" class="card" id="bloque-Tproductos">
            <div class="card-header border-light justify-content-between">
                <div class="d-flex gap-2">
                    <div class="app-search">
                        <input data-table-search="" type="search" class="form-control" placeholder="Buscar por nombre...">
                        <i data-lucide="search" class="app-search-icon text-muted"></i>
                    </div>
                    <button data-table-delete-selected="" data-table-delete-url="@Url.Action("EliminarMultiples","Producto")" type="button" class="btn btn-danger btn-icon d-none">
                        <i class="ti ti-trash fs-xl"></i>
                    </button>
                </div>
                <div class="d-flex align-items-center gap-2">
                    <div class="app-search">
                        <select data-table-filter="categ" class="form-select form-control my-1 my-md-0">
                            <option value="">Categoría</option>
                            @Html.Action("_listcategoriasName", "Parcial")
                        </select>
                        <i data-lucide="tag" class="app-search-icon text-muted"></i>
                    </div>
                    <div class="app-search">
                        <select data-table-filter="subcat" class="form-select form-control my-1 my-md-0">
                            <option value="">Sub. Categoría</option>
                            @Html.Action("_listareasName", "Parcial")
                        </select>
                        <i data-lucide="tag" class="app-search-icon text-muted"></i>
                    </div>
                    <div class="app-search">
                        <select data-table-range-filter="precio" class="form-select form-control my-1 my-md-0">
                            <option value="">Rango de precio</option>
                            <option value="0-50">$0 - $50</option>
                            <option value="51-150">$51 - $150</option>
                            <option value="151-500">$151 - $500</option>
                            <option value="500+">$500+</option>
                        </select>
                        <i data-lucide="dollar-sign" class="app-search-icon text-muted"></i>
                    </div>
                    <div>
                        <select data-table-set-rows-per-page="" class="form-select form-control my-1 my-md-0">
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="150">150</option>
                            <option value="200">200</option>
                        </select>
                    </div>
                </div>
                <div class="d-flex gap-1">
                    <button class="btn btn-secondary btn-icon" id="btnAgregarProducto">
                        <i class="ti ti-plus fs-xxl"></i>
                    </button>
                    <button class="btn btn-success btn-icon" id="btnExportExcel">
                        <i data-lucide="file-spreadsheet" class="fs-lg"></i>
                    </button>
                    <button class="btn btn-info btn-icon" id="btnPrint">
                        <i data-lucide="printer" class="fs-lg"></i>
                    </button>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="productosTable">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th class="ps-3 noExport" style="width: 1%;" data-exclude="true">
                                <input data-table-select-all="" class="form-check-input form-check-input-light fs-14 mt-0" type="checkbox" id="select-all-products" value="option">
                            </th>
                            <th data-table-sort="" data-column="fecha">FECHA</th>
                            <th data-table-sort="" data-column="cod">COD</th>
                            <th data-table-sort="" data-column="prod">PRODUCTO</th>
                            <th data-table-sort="" data-column="uni">UNIDAD</th>
                            <th data-table-sort="" data-column="categ">CATEGORIA</th>
                            <th data-table-sort="" data-column="subcat">SUB. CATEGORIA</th>
                            <th data-table-sort="" data-column="precio">PRECIO</th>
                            <th data-table-sort="" data-column="costo">COSTO</th>
                            <th class="text-center noExport" style="width: 1%;">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div>
    </div><!-- end col -->
</div><!-- end row -->
<div class="modal fade" id="modalAgregarProducto" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="standard-modalLabel">Agregar producto</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="formAgregarProducto">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xxl-8">
                            <div class="card">
                                <div class="card-header d-block p-3">
                                    <h4 class="card-title mb-1">Información del producto</h4>
                                    <p class="text-muted mb-0">
                                        Para agregar un nuevo producto, proporcione los detalles necesarios en los campos a continuación.
                                    </p>
                                </div> <!-- end card-header -->
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="mb-3">
                                                <label for="nombre" class="form-label">Nombre del producto <span class="text-danger">*</span></label>
                                                <input type="text" class="form-control" id="nombre" name="nombre" placeholder="Entre el nombre del producto" required="">
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-3">
                                                <label for="cod" class="form-label">Código <span class="text-danger">*</span></label>
                                                <input type="text" class="form-control" id="cod" name="cod" placeholder="SOFA-10058" required="">
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-3">
                                                <label for="unidadid" class="form-label">Unidad <span class="text-danger">*</span></label>
                                                <div class="app-search">
                                                    <select class="form-select form-control my-1 my-md-0" id="unidadid" name="unidadid">
                                                        @Html.Action("_listunidades", "Parcial")
                                                    </select>
                                                    <i data-lucide="box" class="app-search-icon text-muted"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div> <!-- end card-body-->
                            </div> <!-- end card-->
                        </div> <!-- end col-->
                        <div class="col-xxl-4">
                            <div class="card">
                                <div class="card-header d-block p-3">
                                    <h4 class="card-title mb-1">Precios</h4>
                                    <p class="text-muted mb-0">
                                        Establezca el precio y el costo del producto.
                                    </p>
                                </div> <!-- end card-header -->
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label for="precio" class="form-label">Precio <span class="text-danger">*</span></label>
                                        <div class="app-search">
                                            <input type="text" class="form-control decimalVAL" id="precio" name="precio" step="0.01" placeholder="Precio (Ejemplo, 199,99)" required="">
                                            <i data-lucide="dollar-sign" class="app-search-icon text-muted"></i>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="costo" class="form-label">Costo <span class="text-danger">*</span></label>
                                        <div class="app-search">
                                            <input type="text" class="form-control decimalVAL" id="costo" name="costo" step="0.01" placeholder="Costo (Ejemplo, 99,99)" required="">
                                            <i data-lucide="hand-coins" class="app-search-icon text-muted"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xxl-12">
                            <div class="card">
                                <div class="card-header d-block p-3">
                                    <h4 class="card-title mb-1">Organizar</h4>
                                    <p class="text-muted mb-0">
                                        Organice su producto, seleccionando categoría y subcategoría adecuadas.
                                    </p>
                                </div> <!-- end card-header -->
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-lg-6">
                                            <div class="mb-3">
                                                <label for="category" class="form-label">Categoría <span class="text-danger">*</span></label>
                                                <div class="app-search">
                                                    <select class="form-select form-control my-1 my-md-0" id="categoriaid" name="categoriaid" required="">
                                                        @Html.Action("_listcategorias", "Parcial")
                                                    </select>
                                                    <i data-lucide="tag" class="app-search-icon text-muted"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-3">
                                                <label for="subCategory" class="form-label">Sub Categoría<span class="text-danger"></span></label>
                                                <div class="app-search">
                                                    <select class="form-select form-control my-1 my-md-0" id="areaid" name="areaid">
                                                        @Html.Action("_listareas", "Parcial")
                                                    </select>
                                                    <i data-lucide="tag" class="app-search-icon text-muted"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>                    
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" id="btnGuardarMovimiento" class="btn btn-primary">Agregar</button>
                </div>
            </form>
        </div>
    </div> <!-- end modal dialog-->
</div> <!-- end modal-->
<div class="modal fade" id="modalEditarProducto" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="standard-modalLabel">Editar producto</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="formEditarProducto">
                @Html.AntiForgeryToken()
                <input type="hidden" id="Edit_ProductoID" name="Edit_ProductoID" />
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xxl-8">
                            <div class="card">
                                <div class="card-header d-block p-3">
                                    <h4 class="card-title mb-1">Información del producto</h4>
                                </div> <!-- end card-header -->
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="mb-3">
                                                <label for="Edit_Nombre" class="form-label">Nombre del producto <span class="text-danger">*</span></label>
                                                <input type="text" class="form-control" id="Edit_Nombre" name="Edit_Nombre" placeholder="Entre el nombre del producto" required="">
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-3">
                                                <label for="Edit_Cod" class="form-label">Código <span class="text-danger">*</span></label>
                                                <input type="text" class="form-control" id="Edit_Cod" name="Edit_Cod" placeholder="SOFA-10058" required="">
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-3">
                                                <label for="Edit_UnidadID" class="form-label">Unidad <span class="text-danger">*</span></label>
                                                <div class="app-search">
                                                    <select class="form-select form-control my-1 my-md-0" id="Edit_UnidadID" name="Edit_UnidadID">
                                                        @Html.Action("_listunidades", "Parcial")
                                                    </select>
                                                    <i data-lucide="box" class="app-search-icon text-muted"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div> <!-- end card-body-->
                            </div> <!-- end card-->
                        </div> <!-- end col-->
                        <div class="col-xxl-4">
                            <div class="card">
                                <div class="card-header d-block p-3">
                                    <h4 class="card-title mb-1">Precios</h4>
                                </div> <!-- end card-header -->
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label for="Edit_Precio" class="form-label">Precio <span class="text-danger">*</span></label>
                                        <div class="app-search">
                                            <input type="text" class="form-control decimalVAL" id="Edit_Precio" name="Edit_Precio" step="0.01" placeholder="Precio (Ejemplo, 199,99)" required="">
                                            <i data-lucide="dollar-sign" class="app-search-icon text-muted"></i>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="Edit_Costo" class="form-label">Costo <span class="text-danger">*</span></label>
                                        <div class="app-search">
                                            <input type="text" class="form-control decimalVAL" id="Edit_Costo" name="Edit_Costo" step="0.01" placeholder="Costo (Ejemplo, 99,99)" required="">
                                            <i data-lucide="hand-coins" class="app-search-icon text-muted"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xxl-12">
                            <div class="card">
                                <div class="card-header d-block p-3">
                                    <h4 class="card-title mb-1">Organizar</h4>
                                </div> <!-- end card-header -->
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-lg-3">
                                            <div class="mb-3">
                                                <label for="Edit_CategoriaID" class="form-label">Categoría <span class="text-danger">*</span></label>
                                                <div class="app-search">
                                                    <select class="form-select form-control my-1 my-md-0" id="Edit_CategoriaID" name="Edit_CategoriaID" required="">
                                                        @Html.Action("_listcategorias", "Parcial")
                                                    </select>
                                                    <i data-lucide="tag" class="app-search-icon text-muted"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-5">
                                            <div class="mb-3">
                                                <label for="Edit_AreaID" class="form-label">Sub Categoría<span class="text-danger"></span></label>
                                                <div class="app-search">
                                                    <select class="form-select form-control my-1 my-md-0" id="Edit_AreaID" name="Edit_AreaID">
                                                        @Html.Action("_listareas", "Parcial")
                                                    </select>
                                                    <i data-lucide="tag" class="app-search-icon text-muted"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-3">
                                                <label class="form-label d-block">Estado</label>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="Edit_Activo" id="radioActivo" value="true">
                                                    <label class="form-check-label" for="radioActivo">Activo</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="Edit_Activo" id="radioInactivo" value="false">
                                                    <label class="form-check-label" for="radioInactivo">Inactivo</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" id="btnGuardarMovimiento" class="btn btn-primary">Actualizar</button>
                </div>
            </form>
        </div>
    </div> <!-- end modal dialog-->
</div> <!-- end modal-->
@section Styles {
    <link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/Content/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/Scripts/plugins/toastr/toastr.min.js"></script>
    <script src="~/Scripts/plugins/table2excel/table2excel.js"></script>
    <script src="~/Scripts/custom-table.js"></script>
    <script>
        $(document).ready(function () {
            window.customTable = new CustomTable();
            iniciarVista();
            $('#productosTable').on('click', '.btnEditar', function (e) {
                const id = $(this).closest('tr').data('id');
                const bloqueID = '#formEditarProducto';
                activarOverlayEnContenedor(bloqueID);
                $.getJSON(`/Producto/ObtenerProductoPorId/${id}`, function (res) {                  
                    //Asignar valores al modal
                    const m = res.iData[0];
                    $('#Edit_ProductoID').val(m.ProductoId);                
                    $('#Edit_Nombre').val(m.Nombre);                
                    $('#Edit_Cod').val(m.Cod);                
                    $('#Edit_UnidadID').val(m.UnidadID);                
                    $('#Edit_Precio').val(m.Precio);
                    $('#Edit_Costo').val(m.Costo);                
                    $('#Edit_CategoriaID').val(m.CategoriaID);                
                    $('#Edit_AreaID').val(m.AreaID);   
                    $('#radioActivo').prop('checked', m.Activo === true);
                    $('#radioInactivo').prop('checked', m.Activo === false);                                
                    $('#modalEditarProducto').modal('show');                 
                }).fail(function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error de conexión',
                        text: 'No se pudo consultar los datos. Verifica tu conexión o intenta nuevamente.'
                    });
                }).always(() => desactivarOverlayEnContenedor(bloqueID));
            });
            $('#btnAgregarProducto').on('click', function (e) {
                e.preventDefault();
                $('#modalAgregarProducto').modal('show');
            });
            $('#formAgregarProducto').on("submit", function (e) {
                $(".decimalVAL").each(function () {
                    var valor = $(this).val().replace(".", ",");
                    $(this).val(valor);
                });
                e.preventDefault();
                $('#modalAgregarProducto').modal('hide');
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Create", "Producto")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Producto agregado',
                                text: 'Producto agregado correctamente, redireccionando a la lista.',
                                timer: 1500,
                                showConfirmButton: false
                            });
                            cargarTablaProductos();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: '¡Error!',
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Hubo un problema al enviar el formulario.'
                        });
                    }
                });
            });
            $('#formEditarProducto').on('submit', function (e) {
                e.preventDefault();               
                $(".decimalVAL").each(function () {
                    var valor = $(this).val().replace(".", ",");
                    $(this).val(valor);
                });

                $.ajax({
                    url: '@Url.Action("EditarProducto", "Producto")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.exito) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Producto actualizado',
                                text: res.mensaje,
                                timer: 1500,
                                showConfirmButton: false
                            });
                            $('#modalEditarProducto').modal('hide');
                            cargarTablaProductos(); // Recarga la tabla
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: res.mensaje
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Hubo un problema al actualizar el movimiento.'
                        });
                    }
                });
            });

            function iniciarVista() {
                // 🧠 Ejecutar en cascada sin dependencia entre ellas
                try { cargarTablaProductos(); } catch (e) { console.error("Error al optener listado:", e.message); }
            }
            async function cargarTablaProductos() {
                const url = '@Url.Action("GetProductos", "Producto")';
                const bloqueID = '#bloque-Tproductos';
                const datos = await OptenerData(url, bloqueID);
                if (datos) {
                    refreshTable(datos, bloqueID);
                }
            }
            async function OptenerData(url, bloqueID) {
                activarOverlayEnContenedor(bloqueID);
                try {
                    const response = await fetch(url, { method: "GET" });

                    const tipo = response.headers.get("content-type") || "";
                    if (!response.ok) {
                        console.warn(`⚠️ Error HTTP ${response.status} en ${url}`);
                        const texto = await response.text();
                        console.log("Contenido devuelto:", texto.slice(0, 200));
                        return null;
                    }


                    if (!tipo.includes("application/json")) {
                        const texto = await response.text();
                        console.error("❌ Respuesta no es JSON válida:", texto.slice(0, 200));
                        return null;
                    }
                    return await response.json();
                } catch (error) {
                    console.error(`❌ Error de red o fetch en ${url}:`, error);
                    return null;
                }
            }
            function refreshTable(data, bloqueID) {
                const tableEl = document.querySelector('[data-table]');
                const instance = window.customTable.tables.find(t => t.table === tableEl);

                const tbody = tableEl.querySelector("tbody");
                tbody.innerHTML = "";

                const rows = data.map(item => {
                    const tr = document.createElement('tr');
                    tr.id = `${item.ProductoID}`;
                    tr.dataset.id = item.ProductoID;
                    tr.innerHTML = `
                    <td class="noExport">
                    <input class="form-check-input form-check-input-light fs-14 product-item-check mt-0" type="checkbox" value="${item.ProductoID}">
                    </td>
                    <td>${item.FechaTexto}</td>
                    <td>${item.Codigo}</td>
                    <td>${item.Nombre}</td>
                    <td>${item.UnidadNombre}</td>
                    <td>${item.CategoriaNombre}</td>
                    <td>${item.AreaNombre}</td>
                    <td>${item.Precio}</td >
                    <td>${item.Costo}</td>
                    <td class="noExport">
                    <div class="d-flex justify-content-center gap-1">
                    <button class="btn btn-light btn-icon btn-sm rounded-circle btnEditar"><i class="ti ti-edit fs-lg"></i></button>
                    </div></td>`;
                    return tr;
                });

                instance.fullRefresh(rows);
                setupCheckboxListeners();
            }
            function setupCheckboxListeners() {
                let tableEl = document.querySelector('[data-table]');
                let btnDeleteSelected = document.querySelector('[data-table-delete-selected]');
                let e = tableEl.querySelector("tbody");
                let checkAllCheckBox = document.querySelector("#select-all-products");
                let t = e.querySelectorAll('input[type="checkbox"]');
                let rows = Array.from(e.querySelectorAll("tr"));
                let filteredRows = [...rows];

                checkAllCheckBox &&
                    0 < t.length &&
                    t.forEach((e) => {
                        e.addEventListener("change", () => {
                            var e = Array.from(t).some((e) => e.checked);
                            btnDeleteSelected &&
                                0 < filteredRows.length &&
                                btnDeleteSelected.classList.toggle("d-none", !e);
                        });
                    });
            }
            function activarOverlayEnContenedor(contenedorID) {
                const contenedor = document.querySelector(contenedorID);
                if (!contenedor) return;

                const cards = contenedor.querySelectorAll('.card');
                cards.forEach(card => {
                    let overlay = card.querySelector('.card-overlay');
                    if (!overlay) {
                        overlay = document.createElement('div');
                        overlay.classList.add(
                            'card-overlay',
                            'position-absolute',
                            'top-0',
                            'start-0',
                            'w-100',
                            'h-100',
                            'd-flex',
                            'justify-content-center',
                            'align-items-center',
                            'noExport'
                        );

                        overlay.style.zIndex = '10';
                        const spinner = document.createElement('div');
                        spinner.classList.add('spinner-border', 'text-primary');
                        spinner.setAttribute('role', 'status');
                        const label = document.createElement('span');
                        label.classList.add('visually-hidden');
                        label.textContent = 'Cargando...';
                        spinner.appendChild(label);
                        overlay.appendChild(spinner);
                        card.appendChild(overlay);
                    }

                    overlay.style.display = 'flex';
                    $(overlay).hide().fadeIn(200);
                });
            }
            function desactivarOverlayEnContenedor(contenedorID) {
                const contenedor = document.querySelector(contenedorID);
                if (!contenedor) return;
                const overlays = contenedor.querySelectorAll('.card .card-overlay');
                overlays.forEach(overlay => {
                    $(overlay).fadeOut(200, () => overlay.remove());
                });
            }
            document.getElementById("btnExportExcel").addEventListener("click", function () {
                const exporter = new Table2Excel();
                // Clona la tabla para no afectar el original
                let tablaClonada = $("#productosTable").clone();
                // Elimina las columnas que no deseas
                tablaClonada.find("th:nth-child(1), td:nth-child(1)").remove(); // 1
                tablaClonada.find("th:nth-child(9), td:nth-child(9)").remove(); // 9
                // Export tabla
                exporter.export(tablaClonada, "listado de productos", {
                    exclude: ".noExport",
                    name: "Exportación",
                    filename: "listado de productos.xlsx",
                    preserveColors: true
                });

            });
            document.getElementById("btnPrint").addEventListener("click", function () {
                let tablaClonada = $("#productosTable").clone();
                tablaClonada.find(".noExport").remove();
                const ventana = window.open('', '', 'height=1080,width=1920');
                ventana.document.write(`
                <html>
                <head>
                <title>Imprimir</title>
                <style>
                body {
                 font-family: Arial, sans-serif;
                 margin: 20px;
                 font-size: 11px;
                 color: #333;
             }             h3 {
                 margin-bottom: 5px;
                 color: #004080;
             }
             p {
               margin: 0 0 10px;
               font-weight: bold;
           }
           table {
               width: 100%;
               border-collapse: collapse;
               margin-top: 10px;
           }
           th, td {
               border: 1px solid #999;
               padding: 6px 4px;
               text-align: center;
           }
           thead {
               background-color: #004080;
               color: white;
               font-weight: bold;
           }
           tfoot td {
               background-color: #f0f0f0;
               font-weight: bold;
           }
           tr:nth-child(even) td {
               background-color: #f9f9f9;
           }
           media print {
               body {
                   font-size: 12px;
               }
           }
           </style>
           </head>
           <body>
           ${tablaClonada[0].outerHTML}
           </body>
           </html>
           `);
                ventana.document.close();
                ventana.focus();
                ventana.print();
            });

        });
    </script>
}