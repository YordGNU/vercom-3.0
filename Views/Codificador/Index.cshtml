@{
    ViewBag.Title = "CODIFICADORES";
}
<div class="page-title-head d-flex align-items-center">
    <div class="flex-grow-1">
        <h4 class="fs-sm text-uppercase fw-bold m-0">CODIFICADORES</h4>
    </div>
    <div class="text-end">
        <ol class="breadcrumb m-0 py-0">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index","Home")">VERCOM</a>
            </li>
            <li class="breadcrumb-item">
                <a href="#">CODIFICADORES</a>
            </li>
            <li class="breadcrumb-item active">REGISTRO</li>
        </ol>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h4 class="card-title">Gestión de ventas</h4>
    </div>
    <div class="card-body">
        <p class="text-muted mb-2">
            Catálogo técnico de codificadores para flujo de ventas.
        </p>
    </div>
</div>
<div class="row">
    <div class="col-xxl-4">
        <div data-table="" data-table-rows-per-page="10" class="card" id="bloque-Tcategorias">
            <div class="card-header">
                <h5 class="card-title">Categorias</h5>
                <button data-table-delete-selected="" data-table-delete-url="" type="button" class="btn btn-danger btn-icon d-none">
                    <i class="ti ti-trash fs-xl"></i>
                </button>
                <div class="card-action">
                    <a href="#!" class="card-action-item" data-action="card-toggle"><i class="ti ti-chevron-up"></i></a>
                    <a href="#!" class="card-action-item" data-action="card-close"><i class="ti ti-x"></i></a>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="tablaCategoria">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th class="ps-3 noExport" style="width: 1%;">
                                <input data-table-select-all="" class="form-check-input form-check-input-light fs-14 mt-0" type="checkbox" id="select-all-products" value="option">
                            </th>
                            <th data-table-sort="" data-column="NOMBRE">NOMBRE</th>
                            <th class="text-center noExport" style="width: 1%;">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div> <!-- end card-->
        <div data-table="" data-table-rows-per-page="10" class="card" id="bloque-Tunidades">
            <div class="card-header">
                <h5 class="card-title">Unidades de medida</h5>
                <div class="card-action">
                    <a href="#!" class="card-action-item" data-action="card-toggle"><i class="ti ti-chevron-up"></i></a>
                    <a href="#!" class="card-action-item" data-action="card-close"><i class="ti ti-x"></i></a>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="tablaPuntos">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th class="ps-3 noExport" style="width: 1%;">
                                <input data-table-select-all="" class="form-check-input form-check-input-light fs-14 mt-0" type="checkbox" id="select-all-products" value="option">
                            </th>
                            <th data-table-sort="" data-column="NOMBRE">NOMBRE</th>
                            <th class="text-center noExport" style="width: 1%;">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div> <!-- end card-->
    </div> <!-- end col-->
    <div class="col-xxl-4 col-xl-6">
        <div data-table="" data-table-rows-per-page="10" class="card" id="bloque-TSubcategorias">
            <div class="card-header">
                <h5 class="card-title">Sub-Categorias</h5>
                <div class="card-action">
                    <a href="#!" class="card-action-item" data-action="card-toggle"><i class="ti ti-chevron-up"></i></a>
                    <a href="#!" class="card-action-item" data-action="card-close"><i class="ti ti-x"></i></a>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="tablaPuntos">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th class="ps-3 noExport" style="width: 1%;">
                                <input data-table-select-all="" class="form-check-input form-check-input-light fs-14 mt-0" type="checkbox" id="select-all-products" value="option">
                            </th>
                            <th data-table-sort="" data-column="NOMBRE">NOMBRE</th>
                            <th class="text-center noExport" style="width: 1%;">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div> <!-- end card-->
    </div> <!-- end col-->
    <div class="col-xxl-4 col-xl-6">
        <div data-table="" data-table-rows-per-page="10" class="card" id="bloque-TOperaciones">
            <div class="card-header">
                <h5 class="card-title">Tipos de operación</h5>
                <div class="card-action">
                    <a href="#!" class="card-action-item" data-action="card-toggle"><i class="ti ti-chevron-up"></i></a>
                    <a href="#!" class="card-action-item" data-action="card-close"><i class="ti ti-x"></i></a>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="tablaPuntos">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th class="ps-3 noExport" style="width: 1%;">
                                <input data-table-select-all="" class="form-check-input form-check-input-light fs-14 mt-0" type="checkbox" id="select-all-products" value="option">
                            </th>
                            <th data-table-sort="" data-column="NOMBRE">NOMBRE</th>
                            <th class="text-center noExport" style="width: 1%;">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div> <!-- end card-->
        <div data-table="" data-table-rows-per-page="10" class="card" id="bloque-MPago">
            <div class="card-header">
                <h5 class="card-title">Método de pago</h5>
                <div class="card-action">
                    <a href="#!" class="card-action-item" data-action="card-toggle"><i class="ti ti-chevron-up"></i></a>
                    <a href="#!" class="card-action-item" data-action="card-close"><i class="ti ti-x"></i></a>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-custom table-centered table-select table-hover w-100 mb-0" id="tablaMPago">
                    <thead class="bg-light align-middle bg-opacity-25 thead-sm">
                        <tr class="text-uppercase fs-xxs">
                            <th class="ps-3 noExport" style="width: 1%;">
                                <input data-table-select-all="" class="form-check-input form-check-input-light fs-14 mt-0" type="checkbox" id="select-all-products" value="option">
                            </th>
                            <th data-table-sort="" data-column="NOMBRE">NOMBRE</th>
                            <th class="text-center noExport" style="width: 1%;">ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="card-footer border-0">
                <div class="d-flex justify-content-between align-items-center">
                    <div data-table-pagination-info="entradas"></div>
                    <div data-table-pagination=""></div>
                </div>
            </div>
        </div> <!-- end card-->
    </div> <!-- end col-->
</div>
@section Styles {
    <link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/Scripts/plugins/toastr/toastr.min.js"></script>
    <script src="~/Scripts/custom-table.js"></script>
    <script>
        $(document).ready(function () {
            window.customTable = new CustomTable();
            cargarTBCategorias();
            cargarTBUnidades();
            cargarTBSubCategorias();
            cargarTBtOperaciones();
            cargarTBmPagos();

            $('#CodTB1').on('click', '.btnEditar', function (e) {
             const id = $(this).closest('tr').data('id');
             const bloqueID = '#formEditarPunto';
             activarOverlayEnContenedor(bloqueID);
             $.getJSON(`/Punto/ObtenerPuntoPorId/${id}`, function (res) {
                 //Asignar valores al modal
                 const m = res.iData[0];
                 $('#Edit_PuntoID').val(m.PuntoID);
                 $('#Edit_Nombre').val(m.Nombre);
                 $('#modalEditarPunto').modal('show');
             }).fail(function () {
                 Swal.fire({
                     icon: 'error',
                     title: 'Error de conexión',
                     text: 'No se pudo consultar los datos. Verifica tu conexión o intenta nuevamente.'
                 });
             }).always(() => desactivarOverlayEnContenedor(bloqueID));
            });
            $('#btnAgregarPunto').on('click', function (e) {
             e.preventDefault();
             $('#modalAgregarPunto').modal('show');
            });
            $('#formAgregarPunto').on("submit", function (e) {
                $(".decimalVAL").each(function () {
                    var valor = $(this).val().replace(".", ",");
                    $(this).val(valor);
                });
                e.preventDefault();
                $('#modalAgregarPunto').modal('hide');
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Create", "Punto")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Punto agregado',
                                text: 'Punto agregado correctamente, actualizando lista...',
                                timer: 2000,
                                showConfirmButton: false
                            });
                            cargarTablaPuntos();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: '¡Error!',
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Hubo un problema al enviar el formulario.'
                        });
                    }
                });
            });
            $('#formEditarPunto').on('submit', function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("EditarPunto", "Punto")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.exito) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Punto actualizado, actualizando lista...',
                                text: res.mensaje,
                                timer: 2000,
                                showConfirmButton: false
                            });
                            $('#modalEditarPunto').modal('hide');
                            cargarTablaPuntos(); // Recarga la tabla
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: res.mensaje
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Hubo un problema al actualizar el punto.'
                        });
                    }
                });
            });

            async function cargarTBCategorias() {
             const url = '@Url.Action("GetCategorias", "Codificador")';
             const bloqueID = '#bloque-Tcategorias';
             const datos = await OptenerData(url, bloqueID);
             if (datos) {
                 refreshTB1(datos, bloqueID);
             }
            }
            async function cargarTBUnidades() {
                const url = '@Url.Action("GetUnidades", "Codificador")';
                const bloqueID = '#bloque-TUnidades';
             const datos = await OptenerData(url, bloqueID);
             if (datos) {
                 refreshTB2(datos, bloqueID);
             }
            }
            async function cargarTBSubCategorias() {
                const url = '@Url.Action("GetSubCategorias", "Codificador")';
                const bloqueID = '#bloque-TSubcategorias';
                const datos = await OptenerData(url, bloqueID);
                if (datos) {
                    refreshTB3(datos, bloqueID);
                }
            }
            async function cargarTBtOperaciones() {
                const url = '@Url.Action("GetTOperaciones", "Codificador")';
                const bloqueID = '#bloque-TOperaciones';
                const datos = await OptenerData(url, bloqueID);
                if (datos) {
                    refreshTB4(datos, bloqueID);
                }
            }
            async function cargarTBmPagos() {
            const url = '@Url.Action("GetTPago", "Codificador")';
             const bloqueID = '#bloque-MPago';
             const datos = await OptenerData(url, bloqueID);
             if (datos) {
                 refreshTB5(datos, bloqueID);
             }
            }

            async function OptenerData(url, bloqueID) {
             activarOverlayEnContenedor(bloqueID);
             try {
                 const response = await fetch(url, { method: "GET" });

                 const tipo = response.headers.get("content-type") || "";
                 if (!response.ok) {
                     console.warn(`⚠️ Error HTTP ${response.status} en ${url}`);
                     const texto = await response.text();
                     console.log("Contenido devuelto:", texto.slice(0, 200));
                     return null;
                 }

                 if (!tipo.includes("application/json")) {
                     const texto = await response.text();
                     console.error("❌ Respuesta no es JSON válida:", texto.slice(0, 200));
                     return null;
                 }

                 return await response.json();
             } catch (error) {
                 console.error(`❌ Error de red o fetch en ${url}:`, error);
                 return null;
             }
            }

         function refreshTB1(data, bloqueID) {
             const tabla1 = window.customTable.tables[0];
             const rows = data.map(item => {
                 const tr = document.createElement('tr');
                 tr.id = `${item.ID}`;
                 tr.dataset.id = item.ID;
                 tr.innerHTML = `
                 <td class="noExport">
                 <input class="form-check-input form-check-input-light fs-14 product-item-check mt-0" type="checkbox" value="${item.ID}">
                 </td>
                 <td>${item.Clave}</td>
                 <td class="noExport">
                 <div class="d-flex justify-content-center gap-1">
                 <button class="btn btn-light btn-icon btn-sm rounded-circle btnEditar"><i class="ti ti-edit fs-lg"></i></button>
                 </div></td>`;
                 return tr;
             });

             tabla1.fullRefresh(rows);
             setupCheckboxListeners();
             desactivarOverlayEnContenedor(bloqueID);
         }
         function refreshTB2(data, bloqueID) {
                const tabla1 = window.customTable.tables[1];
                const rows = data.map(item => {
                    const tr = document.createElement('tr');
                    tr.id = `${item.ID}`;
                    tr.dataset.id = item.ID;
                    tr.innerHTML = `
          <td class="noExport">
          <input class="form-check-input form-check-input-light fs-14 product-item-check mt-0" type="checkbox" value="${item.ID}">
          </td>
          <td>${item.Clave}</td>
          <td class="noExport">
          <div class="d-flex justify-content-center gap-1">
          <button class="btn btn-light btn-icon btn-sm rounded-circle btnEditar"><i class="ti ti-edit fs-lg"></i></button>
          </div></td>`;
                    return tr;
                });

                tabla1.fullRefresh(rows);
                setupCheckboxListeners();
                desactivarOverlayEnContenedor(bloqueID);
            }
         function refreshTB3(data, bloqueID) {
                const tabla1 = window.customTable.tables[2];
                const rows = data.map(item => {
                    const tr = document.createElement('tr');
                    tr.id = `${item.ID}`;
                    tr.dataset.id = item.ID;
                    tr.innerHTML = `
                    <td class="noExport">
                    <input class="form-check-input form-check-input-light fs-14 product-item-check mt-0" type="checkbox" value="${item.ID}">
                    </td>
                    <td>${item.Clave}</td>
                    <td class="noExport">
                    <div class="d-flex justify-content-center gap-1">
                    <button class="btn btn-light btn-icon btn-sm rounded-circle btnEditar"><i class="ti ti-edit fs-lg"></i></button>
                    </div></td>`;
                    return tr;
                });
                tabla1.fullRefresh(rows);
                setupCheckboxListeners();
                desactivarOverlayEnContenedor(bloqueID);
            }
         function refreshTB4(data, bloqueID) {
                const tabla1 = window.customTable.tables[3];
                const rows = data.map(item => {
                    const tr = document.createElement('tr');
                    tr.id = `${item.ID}`;
                    tr.dataset.id = item.ID;
                    tr.innerHTML = `
                    <td class="noExport">
                    <input class="form-check-input form-check-input-light fs-14 product-item-check mt-0" type="checkbox" value="${item.ID}">
                    </td>
                    <td>${item.Clave}</td>
                    <td class="noExport">
                    <div class="d-flex justify-content-center gap-1">
                    <button class="btn btn-light btn-icon btn-sm rounded-circle btnEditar"><i class="ti ti-edit fs-lg"></i></button>
                    </div></td>`;
                    return tr;
                });
                tabla1.fullRefresh(rows);
                setupCheckboxListeners();
                desactivarOverlayEnContenedor(bloqueID);
            }
         function refreshTB5(data, bloqueID) {
                const tabla1 = window.customTable.tables[4];
                const rows = data.map(item => {
                    const tr = document.createElement('tr');
                    tr.id = `${item.ID}`;
                    tr.dataset.id = item.ID;
                    tr.innerHTML = `
            <td class="noExport">
            <input class="form-check-input form-check-input-light fs-14 product-item-check mt-0" type="checkbox" value="${item.ID}">
            </td>
            <td>${item.Clave}</td>
            <td class="noExport">
            <div class="d-flex justify-content-center gap-1">
            <button class="btn btn-light btn-icon btn-sm rounded-circle btnEditar"><i class="ti ti-edit fs-lg"></i></button>
            </div></td>`;
                    return tr;
                });
                tabla1.fullRefresh(rows);
                setupCheckboxListeners();
                desactivarOverlayEnContenedor(bloqueID);
            }

         function setupCheckboxListeners() {
             let tableEl = document.querySelector('[data-table]');
             let btnDeleteSelected = document.querySelector('[data-table-delete-selected]');
             let e = tableEl.querySelector("tbody");
             let checkAllCheckBox = document.querySelector("#select-all-products");
             let t = e.querySelectorAll('input[type="checkbox"]');
             let rows = Array.from(e.querySelectorAll("tr"));
             let filteredRows = [...rows];

             checkAllCheckBox &&
                 0 < t.length &&
                 t.forEach((e) => {
                     e.addEventListener("change", () => {
                         var e = Array.from(t).some((e) => e.checked);
                         btnDeleteSelected &&
                             0 < filteredRows.length &&
                             btnDeleteSelected.classList.toggle("d-none", !e);
                     });
                 });
         }
         function activarOverlayEnContenedor(contenedorID) {
             const contenedor = document.querySelector(contenedorID);
             if (!contenedor) return;

             const cards = contenedor.querySelectorAll('.card');
             cards.forEach(card => {
                 let overlay = card.querySelector('.card-overlay');
                 if (!overlay) {
                     overlay = document.createElement('div');
                     overlay.classList.add(
                         'card-overlay',
                         'position-absolute',
                         'top-0',
                         'start-0',
                         'w-100',
                         'h-100',
                         'd-flex',
                         'justify-content-center',
                         'align-items-center',
                         'noExport'
                     );

                     overlay.style.zIndex = '10';
                     const spinner = document.createElement('div');
                     spinner.classList.add('spinner-border', 'text-primary');
                     spinner.setAttribute('role', 'status');
                     const label = document.createElement('span');
                     label.classList.add('visually-hidden');
                     label.textContent = 'Cargando...';
                     spinner.appendChild(label);
                     overlay.appendChild(spinner);
                     card.appendChild(overlay);
                 }

                 overlay.style.display = 'flex';
                 $(overlay).hide().fadeIn(200);
             });
         }
         function desactivarOverlayEnContenedor(contenedorID) {
             const contenedor = document.querySelector(contenedorID);
             if (!contenedor) return;
             const overlays = contenedor.querySelectorAll('.card .card-overlay');
             overlays.forEach(overlay => {
                 $(overlay).fadeOut(200, () => overlay.remove());
             });
         }

     });
    </script>
}

